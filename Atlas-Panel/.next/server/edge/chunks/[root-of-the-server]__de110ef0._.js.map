{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  const accessToken = request.cookies.get('access_token');\n  const userCookie = request.cookies.get('user');\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['/', '/login', '/register', '/forgot-password', '/reset-password'];\n  const isPublicRoute = publicRoutes.includes(pathname) || pathname.startsWith('/pay/');\n  \n  // Auth routes that should redirect logged-in users\n  const authRoutes = ['/login', '/register', '/forgot-password', '/reset-password'];\n  const isAuthRoute = authRoutes.includes(pathname);\n\n  // Admin-only routes\n  const adminRoutes = pathname.startsWith('/admin');\n\n  // Check if user is authenticated\n  if (!accessToken && !isPublicRoute) {\n    return NextResponse.redirect(new URL('/login', request.url));\n  }\n\n  // Only redirect authenticated users away from auth routes (login, register, etc)\n  // But allow them to access home page (/) and payment pages (/pay/*)\n  if (accessToken && isAuthRoute) {\n    return NextResponse.redirect(new URL('/dashboard', request.url));\n  }\n\n  // Check admin access\n  if (adminRoutes && userCookie) {\n    try {\n      const user = JSON.parse(userCookie.value);\n      const isAdmin = user.roles?.includes('ADMIN') || user.role === 'ADMIN';\n      if (!isAdmin) {\n        return NextResponse.redirect(new URL('/dashboard', request.url));\n      }\n    } catch {\n      return NextResponse.redirect(new URL('/login', request.url));\n    }\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    '/((?!api|_next/static|_next/image|favicon.ico|atlas-logo.jpg).*)',\n  ],\n};"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,MAAM,cAAc,QAAQ,OAAO,CAAC,GAAG,CAAC;IACxC,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEvC,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAK;QAAU;QAAa;QAAoB;KAAkB;IACxF,MAAM,gBAAgB,aAAa,QAAQ,CAAC,aAAa,SAAS,UAAU,CAAC;IAE7E,mDAAmD;IACnD,MAAM,aAAa;QAAC;QAAU;QAAa;QAAoB;KAAkB;IACjF,MAAM,cAAc,WAAW,QAAQ,CAAC;IAExC,oBAAoB;IACpB,MAAM,cAAc,SAAS,UAAU,CAAC;IAExC,iCAAiC;IACjC,IAAI,CAAC,eAAe,CAAC,eAAe;QAClC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,iFAAiF;IACjF,oEAAoE;IACpE,IAAI,eAAe,aAAa;QAC9B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,qBAAqB;IACrB,IAAI,eAAe,YAAY;QAC7B,IAAI;YACF,MAAM,OAAO,KAAK,KAAK,CAAC,WAAW,KAAK;YACxC,MAAM,UAAU,KAAK,KAAK,EAAE,SAAS,YAAY,KAAK,IAAI,KAAK;YAC/D,IAAI,CAAC,SAAS;gBACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;YAChE;QACF,EAAE,OAAM;YACN,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC5D;IACF;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;KACD;AACH"}}]
}