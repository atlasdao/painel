{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/lib/services.ts"],"sourcesContent":["import api from './api';\nimport { Transaction, DashboardStats, Balance, PixQRCode } from '@/app/types';\n\nexport const accountValidationService = {\n  async getValidationStatus(): Promise<any> {\n    const response = await api.get('/account-validation/status');\n    return response.data;\n  },\n\n  async createValidationPayment(depixAddress: string): Promise<any> {\n    const response = await api.post('/account-validation/create-payment', { depixAddress });\n    return response.data;\n  },\n\n  async getValidationRequirements(): Promise<any> {\n    const response = await api.get('/account-validation/requirements');\n    return response.data;\n  },\n\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/account-validation/limits');\n    return response.data;\n  },\n\n  async manualValidationCheck(): Promise<any> {\n    const response = await api.post('/account-validation/manual-check');\n    return response.data;\n  },\n};\n\nexport const pixService = {\n  async createDeposit(amount: number, pixKey?: string): Promise<PixQRCode> {\n    const response = await api.post<PixQRCode>('/pix/deposit', { amount, pixKey });\n    return response.data;\n  },\n\n  async generateQRCode(params: {\n    amount: number;\n    depixAddress: string; // Campo obrigat√≥rio\n    description?: string;\n    expirationMinutes?: number;\n  }): Promise<any> {\n    const response = await api.post('/pix/qrcode', params);\n    return response.data;\n  },\n\n  async createWithdraw(amount: number, pixKey: string): Promise<Transaction> {\n    const response = await api.post<Transaction>('/pix/withdraw', { amount, pixKey });\n    return response.data;\n  },\n\n  async getTransactions(params?: { limit?: number; offset?: number }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get<Transaction[]>('/pix/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async getTransaction(id: number): Promise<Transaction> {\n    const response = await api.get<Transaction>(`/pix/transactions/${id}`);\n    return response.data;\n  },\n\n  async getBalance(): Promise<Balance> {\n    const response = await api.get<Balance>('/pix/balance');\n    return response.data;\n  },\n\n  async checkDepositStatus(transactionId: string): Promise<any> {\n    const response = await api.get<any>(`/pix/deposit/${transactionId}/status`);\n    return response.data;\n  },\n};\n\nexport const adminService = {\n  async getDashboardStats(): Promise<DashboardStats> {\n    const response = await api.get<DashboardStats>('/admin/dashboard');\n    return response.data;\n  },\n\n  async getAllTransactions(params?: { \n    limit?: number; \n    offset?: number;\n    status?: string;\n    userId?: number | string;\n    type?: string;\n  }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset,\n      status: params.status,\n      userId: params.userId ? (typeof params.userId === 'string' ? params.userId : params.userId.toString()) : undefined,\n      type: params.type\n    } : undefined;\n    const response = await api.get<Transaction[]>('/admin/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async updateTransactionStatus(\n    transactionId: number, \n    status: 'COMPLETED' | 'FAILED'\n  ): Promise<Transaction> {\n    const response = await api.patch<Transaction>(\n      `/admin/transactions/${transactionId}`,\n      { status }\n    );\n    return response.data;\n  },\n\n  async getUsers(params?: { limit?: number; offset?: number }): Promise<any[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get('/admin/users', { params: apiParams });\n    return response.data;\n  },\n\n  async createUser(data: { username: string; email: string; password: string; role: string }): Promise<any> {\n    const response = await api.post('/admin/users', data);\n    return response.data;\n  },\n\n  async updateUser(userId: string, data: any): Promise<any> {\n    const response = await api.patch(`/admin/users/${userId}`, data);\n    return response.data;\n  },\n\n  async deleteUser(userId: string): Promise<void> {\n    await api.delete(`/admin/users/${userId}`);\n  },\n\n  async generateApiKey(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/generate-api-key`);\n    return response.data;\n  },\n\n  async updateUserMedLimits(userId: string, limits: any): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/med-limits`, limits);\n    return response.data;\n  },\n\n  async adjustUserReputation(userId: string, reputation: any): Promise<any> {\n    const response = await api.put(`/account-validation/user/${userId}/limits`, reputation);\n    return response.data;\n  },\n\n  async getSystemStats(): Promise<any> {\n    const response = await api.get('/admin/stats');\n    return response.data;\n  },\n\n  async getUserStats(userId?: string): Promise<any> {\n    if (userId) {\n      const response = await api.get(`/admin/users/${userId}/stats`);\n      return response.data;\n    }\n    const response = await api.get('/admin/stats/users');\n    return response.data;\n  },\n\n  async getAuditStats(startDate?: Date, endDate?: Date): Promise<any> {\n    const params = {\n      startDate: startDate?.toISOString(),\n      endDate: endDate?.toISOString(),\n    };\n    const response = await api.get('/admin/stats/audit', { params });\n    return response.data;\n  },\n\n  async getAuditLogs(params?: {\n    skip?: number;\n    take?: number;\n    userId?: string;\n    action?: string;\n    resource?: string;\n    startDate?: Date;\n    endDate?: Date;\n  }): Promise<any[]> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      userId: params.userId,\n      action: params.action,\n      resource: params.resource,\n      startDate: params.startDate?.toISOString(),\n      endDate: params.endDate?.toISOString(),\n    } : undefined;\n    const response = await api.get('/admin/audit-logs', { params: apiParams });\n    return response.data;\n  },\n\n  // User Limits Management (MED Compliance)\n  async getAllUsersWithLimits(params?: {\n    skip?: number;\n    take?: number;\n    isFirstDay?: boolean;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n  }): Promise<any> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      isFirstDay: params.isFirstDay,\n      isKycVerified: params.isKycVerified,\n      isHighRiskUser: params.isHighRiskUser,\n    } : undefined;\n    const response = await api.get('/admin/users/limits', { params: apiParams });\n    return response.data;\n  },\n\n  async getUserLimits(userId: string): Promise<any> {\n    const response = await api.get(`/admin/users/${userId}/limits`);\n    return response.data;\n  },\n\n  async updateUserLimits(userId: string, limits: {\n    dailyDepositLimit?: number;\n    dailyWithdrawLimit?: number;\n    dailyTransferLimit?: number;\n    maxDepositPerTx?: number;\n    maxWithdrawPerTx?: number;\n    maxTransferPerTx?: number;\n    monthlyDepositLimit?: number;\n    monthlyWithdrawLimit?: number;\n    monthlyTransferLimit?: number;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n    notes?: string;\n  }): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/limits`, limits);\n    return response.data;\n  },\n\n  async resetUserFirstDay(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/reset-first-day`);\n    return response.data;\n  },\n\n  async applyKycLimits(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/apply-kyc-limits`);\n    return response.data;\n  },\n};\n\nexport const userService = {\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/pix/limits');\n    return response.data;\n  },\n};\n\nexport const apiKeyService = {\n  async getApiKeyStatus(): Promise<{ hasApiKey: boolean; createdAt?: string }> {\n    const response = await api.get('/auth/apitoken');\n    return response.data;\n  },\n\n  async generateApiKey(data: { name?: string; expirationDays?: number }): Promise<any> {\n    const response = await api.post('/auth/apitoken', data);\n    return response.data;\n  },\n\n  async revokeApiKey(): Promise<void> {\n    await api.delete('/auth/apitoken');\n  },\n};\n\nexport const apiKeyRequestService = {\n  async getMyRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-requests');\n    return response.data;\n  },\n\n  async getMyApiKeys(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-api-keys');\n    return response.data;\n  },\n\n  async createRequest(data: {\n    usageReason: string;\n    serviceUrl: string;\n    estimatedVolume: string;\n    usageType: 'SINGLE_CPF' | 'MULTIPLE_CPF';\n  }): Promise<any> {\n    const response = await api.post('/api-key-requests', data);\n    return response.data;\n  },\n\n  async getPendingRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests');\n    return response.data;\n  },\n\n  async approveRequest(requestId: string, data?: { approvalNotes?: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/approve`, data || {});\n    return response.data;\n  },\n\n  async rejectRequest(requestId: string, data: { approvalNotes: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/reject`, data);\n    return response.data;\n  },\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/%28dashboard%29/deposit/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { pixService, accountValidationService } from '@/app/lib/services';\nimport { DollarSign, Copy, Check, QrCode, Loader, CheckCircle, Clock, AlertCircle, Shield, Info } from 'lucide-react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport QRCode from 'qrcode';\nimport { translateStatus } from '@/app/lib/translations';\n\nexport default function DepositPage() {\n  const [amount, setAmount] = useState('1.00');\n  const [pixAddress, setPixAddress] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [qrCodeData, setQrCodeData] = useState<{\n    qrCode: string;\n    pixKey: string;\n    expiresAt: Date;\n    transactionId?: string;\n  } | null>(null);\n  const [copied, setCopied] = useState(false);\n  const [paymentStatus, setPaymentStatus] = useState<'pending' | 'processing' | 'completed' | 'failed' | null>(null);\n  const [validationStatus, setValidationStatus] = useState<{\n    isValidated: boolean;\n    validationPaymentId?: string;\n    validatedAt?: string;\n    limits?: any;\n    reputation?: any;\n  } | null>(null);\n  const [loadingValidation, setLoadingValidation] = useState(true);\n  const [showValidationModal, setShowValidationModal] = useState(false);\n  const [validationDepixAddress, setValidationDepixAddress] = useState('');\n  const [validationRequirements, setValidationRequirements] = useState<{\n    amount: number;\n    description: string;\n    benefits: string[];\n  } | null>(null);\n  const pollingInterval = useRef<NodeJS.Timeout | null>(null);\n\n  const handleDeposit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!amount || parseFloat(amount) <= 0) {\n      toast.error('Por favor, insira um valor v√°lido');\n      return;\n    }\n\n    if (!pixAddress) {\n      toast.error('Por favor, insira o Endere√ßo DePix');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Usar a rota de gera√ß√£o de QR Code\n      const amountInReais = parseFloat(amount);\n      const description = 'Dep√≥sito PIX';\n      \n      const response = await pixService.generateQRCode({\n        amount: amountInReais,\n        depixAddress: pixAddress, // Campo obrigat√≥rio agora\n        description,\n        expirationMinutes: 30,\n      });\n      \n      if (response.qrCode || response.qrCodeImage) {\n        // A API retorna qrCodeImage (imagem) e qrCode (texto para copiar)\n        setQrCodeData({\n          qrCode: response.qrCodeImage, // Imagem do QR Code\n          pixKey: response.qrCode || '', // Texto para copiar e colar\n          expiresAt: new Date(Date.now() + 30 * 60 * 1000), // 30 minutes\n          transactionId: response.transactionId,\n        });\n        setPaymentStatus('pending');\n        toast.success('QR Code gerado com sucesso!');\n        \n        // Iniciar polling para verificar status do pagamento\n        if (response.transactionId) {\n          startPollingPaymentStatus(response.transactionId);\n        }\n      } else {\n        toast.error('Erro ao gerar QR Code');\n      }\n    } catch (error) {\n      console.error('Error creating deposit:', error);\n      toast.error('Erro ao criar dep√≥sito');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fun√ß√£o para verificar status do pagamento regular\n  const checkPaymentStatus = async (transactionId: string) => {\n    try {\n      const status = await pixService.checkDepositStatus(transactionId);\n      \n      if (status.status === 'COMPLETED') {\n        setPaymentStatus('completed');\n        stopPolling();\n        toast.success('Pagamento confirmado com sucesso!');\n        \n        // Resetar formul√°rio ap√≥s alguns segundos\n        setTimeout(() => {\n          resetForm();\n        }, 5000);\n      } else if (status.status === 'PROCESSING') {\n        setPaymentStatus('processing');\n        toast('Pagamento recebido, processando convers√£o para DePix...', {\n          icon: '‚ÑπÔ∏è',\n        });\n      } else if (status.status === 'FAILED' || status.status === 'CANCELLED' || status.status === 'EXPIRED') {\n        setPaymentStatus('failed');\n        stopPolling();\n        if (status.status === 'EXPIRED') {\n          toast.error('QR Code expirado');\n        } else {\n          toast.error('Pagamento falhou ou foi cancelado');\n        }\n      }\n      \n      // Stop polling if backend indicates we should\n      if (status.shouldStopPolling) {\n        stopPolling();\n      }\n      \n      return status;\n    } catch (error) {\n      console.error('Error checking payment status:', error);\n      \n      // Handle service unavailable errors gracefully\n      if (error.response?.status === 503 || error.response?.status >= 500) {\n        // Service temporarily unavailable - continue polling without user notification\n        console.log('Payment service temporarily unavailable, will retry...');\n        return { \n          status: 'PENDING', \n          message: 'Service temporarily unavailable, retrying...',\n          shouldStopPolling: false \n        };\n      }\n      \n      // Handle network/connection errors\n      if (error.code === 'ECONNREFUSED' || error.code === 'NETWORK_ERROR' || !error.response) {\n        console.log('Network error, will retry...');\n        return { \n          status: 'PENDING', \n          message: 'Connection issue, retrying...',\n          shouldStopPolling: false \n        };\n      }\n      \n      // For other errors, show user-friendly message but continue polling\n      console.log('Payment status check failed, will retry...');\n      return { \n        status: 'PENDING', \n        message: 'Status check failed, retrying...',\n        shouldStopPolling: false \n      };\n    }\n  };\n\n  // Fun√ß√£o espec√≠fica para verificar status do pagamento de valida√ß√£o\n  const checkValidationPaymentStatus = async (transactionId: string) => {\n    try {\n      // Primeiro, verificar se a conta j√° foi validada (verifica√ß√£o r√°pida)\n      try {\n        const currentValidationStatus = await accountValidationService.getValidationStatus();\n        if (currentValidationStatus.isValidated) {\n          setPaymentStatus('completed');\n          stopPolling();\n          toast.success('Conta validada com sucesso!');\n          \n          // Recarregar a p√°gina para mostrar a interface completa\n          setTimeout(() => {\n            window.location.reload();\n          }, 1000);\n          return;\n        }\n      } catch (error) {\n        console.log('Error checking validation status:', error);\n      }\n\n      // Se ainda n√£o est√° validada, tentar manual check primeiro\n      try {\n        await accountValidationService.manualValidationCheck();\n        // Se o manual check foi bem-sucedido, verificar novamente o status\n        const updatedValidationStatus = await accountValidationService.getValidationStatus();\n        if (updatedValidationStatus.isValidated) {\n          setPaymentStatus('completed');\n          stopPolling();\n          toast.success('Conta validada com sucesso!');\n          setTimeout(() => {\n            window.location.reload();\n          }, 1000);\n          return;\n        }\n      } catch (error) {\n        console.log('Manual validation check failed, trying direct deposit status check...');\n      }\n\n      // Se manual check n√£o funcionou, verificar status na Eulen API\n      const status = await pixService.checkDepositStatus(transactionId);\n      \n      if (status.status === 'COMPLETED') {\n        // Se pagamento foi confirmado, procurar pela transa√ß√£o de valida√ß√£o completada\n        setPaymentStatus('processing');\n        toast('Pagamento confirmado! Processando valida√ß√£o de conta...', {\n          icon: '‚è≥',\n        });\n        \n        // Continuar polling para verificar quando a valida√ß√£o for processada\n        \n      } else if (status.status === 'PROCESSING') {\n        setPaymentStatus('processing');\n        if (paymentStatus !== 'processing') {\n          toast('Pagamento recebido, processando confirma√ß√£o...', {\n            icon: '‚ÑπÔ∏è',\n          });\n        }\n      } else if (status.status === 'FAILED' || status.status === 'CANCELLED' || status.status === 'EXPIRED') {\n        setPaymentStatus('failed');\n        stopPolling();\n        if (status.status === 'EXPIRED') {\n          toast.error('QR Code de valida√ß√£o expirado');\n        } else {\n          toast.error('Pagamento de valida√ß√£o falhou ou foi cancelado');\n        }\n      }\n      \n      return status;\n    } catch (error) {\n      console.error('Error checking validation payment status:', error);\n      \n      // Handle service unavailable errors gracefully\n      if (error.response?.status === 503 || error.response?.status >= 500) {\n        // Service temporarily unavailable - continue polling without user notification\n        console.log('Payment service temporarily unavailable, will retry...');\n        return { \n          status: 'PENDING', \n          message: 'Service temporarily unavailable, retrying...',\n          shouldStopPolling: false \n        };\n      }\n      \n      // Handle network/connection errors\n      if (error.code === 'ECONNREFUSED' || error.code === 'NETWORK_ERROR' || !error.response) {\n        console.log('Network error, will retry...');\n        return { \n          status: 'PENDING', \n          message: 'Connection issue, retrying...',\n          shouldStopPolling: false \n        };\n      }\n      \n      // For other errors, show user-friendly message but continue polling\n      console.log('Payment status check failed, will retry...');\n      return { \n        status: 'PENDING', \n        message: 'Status check failed, retrying...',\n        shouldStopPolling: false \n      };\n    }\n  };\n\n  // Iniciar polling para pagamento regular\n  const startPollingPaymentStatus = (transactionId: string) => {\n    // Verificar imediatamente\n    checkPaymentStatus(transactionId);\n    \n    // Configurar polling a cada 3 segundos\n    pollingInterval.current = setInterval(() => {\n      checkPaymentStatus(transactionId);\n    }, 3000);\n  };\n\n  // Iniciar polling espec√≠fico para pagamento de valida√ß√£o\n  const startPollingValidationPaymentStatus = (transactionId: string) => {\n    // Verificar imediatamente\n    checkValidationPaymentStatus(transactionId);\n    \n    // Configurar polling a cada 3 segundos\n    pollingInterval.current = setInterval(() => {\n      checkValidationPaymentStatus(transactionId);\n    }, 3000);\n  };\n\n  // Parar polling\n  const stopPolling = () => {\n    if (pollingInterval.current) {\n      clearInterval(pollingInterval.current);\n      pollingInterval.current = null;\n    }\n  };\n\n  // Resetar formul√°rio\n  const resetForm = () => {\n    setQrCodeData(null);\n    setAmount('1.00');\n    setPixAddress('');\n    setPaymentStatus(null);\n    stopPolling();\n  };\n\n  const fetchValidationRequirements = async () => {\n    try {\n      const requirements = await accountValidationService.getValidationRequirements();\n      setValidationRequirements(requirements);\n    } catch (error) {\n      console.error('Error fetching validation requirements:', error);\n    }\n  };\n\n  // Check validation status on mount\n  useEffect(() => {\n    checkValidationStatus();\n    fetchValidationRequirements();\n    return () => {\n      stopPolling();\n    };\n  }, []);\n\n  const checkValidationStatus = async () => {\n    setLoadingValidation(true);\n    try {\n      const status = await accountValidationService.getValidationStatus();\n      setValidationStatus(status);\n    } catch (error: any) {\n      console.error('Error checking validation status:', error);\n      \n      // More detailed error handling\n      if (error.response?.status === 401) {\n        toast.error('Usu√°rio n√£o autenticado. Fa√ßa login novamente.');\n        // Redirect to login\n        window.location.href = '/login';\n      } else if (error.response?.status === 404) {\n        toast.error('Servi√ßo de valida√ß√£o n√£o encontrado');\n      } else if (error.response?.data?.message) {\n        toast.error(`Erro: ${error.response.data.message}`);\n      } else {\n        toast.error('Erro ao verificar status de valida√ß√£o');\n      }\n    } finally {\n      setLoadingValidation(false);\n    }\n  };\n\n  const handleValidationPayment = async () => {\n    if (!validationDepixAddress) {\n      toast.error('Por favor, informe o endere√ßo DePix');\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      const payment = await accountValidationService.createValidationPayment(validationDepixAddress);\n      \n      console.log('Payment response:', payment);\n      \n      if (payment.qrCode && typeof payment.qrCode === 'string' && payment.qrCode.length > 0) {\n        console.log('Generating QR Code for:', payment.qrCode);\n        \n        // Gerar QR Code para valida√ß√£o\n        const dataUrl = await QRCode.toDataURL(payment.qrCode, {\n          type: 'image/png',\n          margin: 1,\n          color: { dark: '#000000', light: '#FFFFFF' },\n          width: 300,\n        });\n        \n        console.log('QR Code generated, dataUrl length:', dataUrl.length);\n        \n        setQrCodeData({\n          qrCode: dataUrl,\n          pixKey: payment.qrCode,\n          expiresAt: new Date(Date.now() + 30 * 60 * 1000),\n          transactionId: payment.transactionId,\n        });\n        setPaymentStatus('pending');\n        setShowValidationModal(false);\n        toast.success('QR Code de valida√ß√£o gerado!');\n        \n        if (payment.transactionId) {\n          startPollingValidationPaymentStatus(payment.transactionId);\n        }\n      } else {\n        console.error('Invalid qrCode in payment response:', payment);\n        console.error('qrCode type:', typeof payment.qrCode, 'value:', payment.qrCode);\n        toast.error('QR Code n√£o foi gerado corretamente - dados inv√°lidos recebidos do servidor');\n      }\n    } catch (error) {\n      console.error('Error creating validation payment:', error);\n      toast.error('Erro ao criar pagamento de valida√ß√£o');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopied(true);\n      toast.success('C√≥digo PIX copiado!');\n      setTimeout(() => setCopied(false), 3000);\n    } catch (error) {\n      toast.error('Erro ao copiar c√≥digo');\n    }\n  };\n\n  const formatCurrency = (value: string) => {\n    const numericValue = value.replace(/\\D/g, '');\n    const floatValue = parseFloat(numericValue) / 100;\n    return floatValue.toLocaleString('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    });\n  };\n\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/\\D/g, '');\n    setAmount((parseFloat(value) / 100).toFixed(2));\n  };\n\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <Toaster position=\"top-right\" />\n      \n      <h1 className=\"text-3xl font-bold mb-8 text-white\">Adquirir DePix</h1>\n\n      {/* Show loading state */}\n      {loadingValidation ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <Loader className=\"animate-spin text-blue-500\" size={48} />\n        </div>\n      ) : (\n        <>\n          {/* Show validation requirement if not validated */}\n          {!validationStatus?.isValidated ? (\n            <div className=\"max-w-2xl mx-auto\">\n              <div className=\"bg-yellow-900/20 border border-yellow-800 rounded-lg p-6 mb-8\">\n                <div className=\"flex items-center mb-4\">\n                  <Shield className=\"text-yellow-400 mr-3\" size={32} />\n                  <h2 className=\"text-2xl font-bold text-yellow-400\">Valida√ß√£o de Conta Necess√°ria</h2>\n                </div>\n                \n                <p className=\"text-gray-300 mb-6\">\n                  Para come√ßar a adquirir DePix, voc√™ precisa validar sua conta com um pagamento √∫nico de <strong>R$ {validationRequirements?.amount ? (validationRequirements.amount).toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : '2,00'}</strong>.\n                </p>\n                \n                <div className=\"flex justify-center\">\n                  <button\n                    onClick={() => setShowValidationModal(true)}\n                    disabled={loading}\n                    className=\"bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-3 px-8 rounded-lg transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\n                  >\n                    <Shield className=\"mr-2\" size={20} />\n                    Validar Conta por R$ {validationRequirements?.amount ? (validationRequirements.amount).toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : '2,00'}\n                  </button>\n                </div>\n              </div>\n\n              {/* Show QR Code for validation payment */}\n              {qrCodeData && (\n                <div className=\"bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-700\">\n                  <h2 className=\"text-xl font-semibold mb-4 flex items-center text-white\">\n                    <QrCode className=\"mr-2 text-yellow-400\" />\n                    QR Code de Valida√ß√£o\n                  </h2>\n                  \n                  {/* Payment Status */}\n                  {paymentStatus === 'pending' && (\n                    <div className=\"bg-yellow-900/20 border border-yellow-800 rounded-lg p-4 mb-4\">\n                      <div className=\"flex items-center justify-center space-x-2\">\n                        <Clock className=\"animate-pulse text-yellow-400\" size={24} />\n                        <span className=\"text-yellow-400 font-semibold\">Aguardando Pagamento de Valida√ß√£o...</span>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {paymentStatus === 'completed' && (\n                    <div className=\"bg-green-900/20 border border-green-800 rounded-lg p-4 mb-4\">\n                      <div className=\"flex items-center justify-center space-x-2\">\n                        <CheckCircle className=\"text-green-400\" size={24} />\n                        <span className=\"text-green-400 font-semibold\">Conta Validada com Sucesso!</span>\n                      </div>\n                      <p className=\"text-center text-sm text-gray-400 mt-2\">\n                        Recarregando p√°gina...\n                      </p>\n                    </div>\n                  )}\n                  \n                  <div className=\"flex justify-center mb-4\">\n                    <img\n                      src={qrCodeData.qrCode}\n                      alt=\"QR Code Valida√ß√£o\"\n                      className=\"w-64 h-64\"\n                    />\n                  </div>\n                  \n                  <div className=\"p-4 bg-gray-700 rounded-lg\">\n                    <p className=\"text-sm text-gray-400 mb-2\">C√≥digo PIX Copia e Cola:</p>\n                    <div className=\"flex items-center space-x-2\">\n                      <input\n                        type=\"text\"\n                        value={qrCodeData.pixKey}\n                        readOnly\n                        className=\"flex-1 px-3 py-2 bg-gray-600 border border-gray-500 text-white rounded text-sm font-mono\"\n                      />\n                      <button\n                        onClick={() => copyToClipboard(qrCodeData.pixKey)}\n                        className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition duration-200\"\n                      >\n                        {copied ? <Check size={20} /> : <Copy size={20} />}\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-center text-sm text-gray-400 mt-4\">\n                    <p className=\"font-semibold text-white\">Valor: R$ {validationRequirements?.amount ? (validationRequirements.amount).toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : '2,00'}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <>\n              {/* Show user limits and reputation info */}\n              {validationStatus?.limits && (\n                <div className=\"bg-gray-800 rounded-lg p-4 mb-6 border border-gray-700\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"text-center\">\n                      <p className=\"text-gray-400 text-sm\">Limite Di√°rio</p>\n                      <p className=\"text-2xl font-bold text-white\">\n                        R$ {validationStatus.limits.daily?.toLocaleString('pt-BR')}\n                      </p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-gray-400 text-sm\">N√≠vel</p>\n                      <p className=\"text-2xl font-bold text-blue-400\">\n                        Tier {validationStatus.limits.tier}\n                      </p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"text-gray-400 text-sm\">Progresso para Pr√≥ximo N√≠vel</p>\n                      <div className=\"w-full bg-gray-700 rounded-full h-3 mt-2\">\n                        <div \n                          className=\"bg-blue-600 h-3 rounded-full transition-all duration-300\"\n                          style={{ width: `${Math.min(validationStatus.limits.progressToNextTier || 0, 100)}%` }}\n                        />\n                      </div>\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        {validationStatus.limits.progressToNextTier?.toFixed(1)}%\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"grid md:grid-cols-2 gap-8\">\n        {/* Deposit Form */}\n        <div className=\"bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-700\">\n          <h2 className=\"text-xl font-semibold mb-4 flex items-center text-white\">\n            <DollarSign className=\"mr-2 text-green-400\" />\n            Informa√ß√µes do Dep√≥sito\n          </h2>\n\n          <form onSubmit={handleDeposit} className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Valor do Dep√≥sito\n              </label>\n              <div className=\"relative\">\n                <span className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\">\n                  R$\n                </span>\n                <input\n                  type=\"text\"\n                  value={amount}\n                  onChange={handleAmountChange}\n                  className=\"w-full pl-10 pr-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 placeholder-gray-400\"\n                  placeholder=\"0,00\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Endere√ßo DePix\n              </label>\n              <input\n                type=\"text\"\n                value={pixAddress}\n                onChange={(e) => setPixAddress(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 placeholder-gray-400\"\n                placeholder=\"Endere√ßo DePix\"\n                required\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\n            >\n              {loading ? (\n                <>\n                  <Loader className=\"animate-spin mr-2\" size={20} />\n                  Gerando PIX...\n                </>\n              ) : (\n                <>\n                  <QrCode className=\"mr-2\" size={20} />\n                  Gerar QR Code PIX\n                </>\n              )}\n            </button>\n          </form>\n\n          {/* Instructions */}\n          <div className=\"mt-6 p-4 bg-blue-900/20 border border-blue-800 rounded-lg\">\n            <h3 className=\"font-semibold text-blue-400 mb-2\">Como funciona:</h3>\n            <ol className=\"text-sm text-blue-300 space-y-1 list-decimal list-inside\">\n              <li>Digite o valor que deseja depositar</li>\n              <li>Clique em \"Gerar QR Code PIX\"</li>\n              <li>Escaneie o QR Code com seu app banc√°rio</li>\n              <li>Confirme o pagamento</li>\n              <li>O valor ser√° creditado automaticamente</li>\n            </ol>\n          </div>\n        </div>\n\n        {/* QR Code Display */}\n        <div className=\"bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-700\">\n          <h2 className=\"text-xl font-semibold mb-4 flex items-center text-white\">\n            <QrCode className=\"mr-2 text-blue-400\" />\n            QR Code PIX\n          </h2>\n\n          {qrCodeData ? (\n            <div className=\"space-y-4\">\n              {/* Payment Status Indicator */}\n              {paymentStatus && (\n                <div className={`p-4 rounded-lg border ${\n                  paymentStatus === 'pending' ? 'bg-yellow-900/20 border-yellow-800' :\n                  paymentStatus === 'processing' ? 'bg-blue-900/20 border-blue-800' :\n                  paymentStatus === 'completed' ? 'bg-green-900/20 border-green-800' :\n                  'bg-red-900/20 border-red-800'\n                }`}>\n                  <div className=\"flex items-center justify-center space-x-2\">\n                    {paymentStatus === 'pending' && (\n                      <>\n                        <Clock className=\"animate-pulse text-yellow-400\" size={24} />\n                        <span className=\"text-yellow-400 font-semibold\">Aguardando Pagamento...</span>\n                      </>\n                    )}\n                    {paymentStatus === 'processing' && (\n                      <>\n                        <Loader className=\"animate-spin text-blue-400\" size={24} />\n                        <span className=\"text-blue-400 font-semibold\">Processando Convers√£o para DePix...</span>\n                      </>\n                    )}\n                    {paymentStatus === 'completed' && (\n                      <>\n                        <CheckCircle className=\"text-green-400\" size={24} />\n                        <span className=\"text-green-400 font-semibold\">Pagamento Confirmado!</span>\n                      </>\n                    )}\n                    {paymentStatus === 'failed' && (\n                      <>\n                        <AlertCircle className=\"text-red-400\" size={24} />\n                        <span className=\"text-red-400 font-semibold\">Pagamento Falhou</span>\n                      </>\n                    )}\n                  </div>\n                  {paymentStatus === 'pending' && (\n                    <p className=\"text-center text-sm text-gray-400 mt-2\">\n                      Escaneie o QR Code ou copie o c√≥digo PIX para realizar o pagamento\n                    </p>\n                  )}\n                  {paymentStatus === 'completed' && (\n                    <p className=\"text-center text-sm text-gray-400 mt-2\">\n                      Seus DePix foram enviados para o endere√ßo configurado\n                    </p>\n                  )}\n                </div>\n              )}\n\n              {/* QR Code Image - Hide when payment is completed */}\n              {paymentStatus !== 'completed' && (\n                <div className=\"flex justify-center\">\n                  <img\n                    src={qrCodeData.qrCode}\n                    alt=\"QR Code PIX\"\n                    className=\"w-64 h-64\"\n                  />\n                </div>\n              )}\n\n              {/* PIX Copy Code - Hide when payment is completed */}\n              {paymentStatus !== 'completed' && (\n                <div className=\"p-4 bg-gray-700 rounded-lg\">\n                  <p className=\"text-sm text-gray-400 mb-2\">C√≥digo PIX Copia e Cola:</p>\n                  <div className=\"flex items-center space-x-2\">\n                    <input\n                      type=\"text\"\n                      value={qrCodeData.pixKey}\n                      readOnly\n                      className=\"flex-1 px-3 py-2 bg-gray-600 border border-gray-500 text-white rounded text-sm font-mono\"\n                    />\n                    <button\n                      onClick={() => copyToClipboard(qrCodeData.pixKey)}\n                      className=\"p-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition duration-200\"\n                    >\n                      {copied ? <Check size={20} /> : <Copy size={20} />}\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {/* Expiration Timer - Hide when payment is completed */}\n              {paymentStatus !== 'completed' && (\n                <div className=\"text-center text-sm text-gray-400\">\n                  <p>QR Code v√°lido por 30 minutos</p>\n                  <p className=\"font-semibold text-white\">\n                    Valor: {formatCurrency((parseFloat(amount) * 100).toString())}\n                  </p>\n                </div>\n              )}\n\n              {/* New Deposit Button - Show different text based on status */}\n              <button\n                onClick={() => {\n                  resetForm();\n                }}\n                className={`w-full py-2 px-4 rounded-lg transition duration-200 ${\n                  paymentStatus === 'completed' \n                    ? 'bg-green-600 text-white hover:bg-green-700' \n                    : 'bg-gray-600 text-white hover:bg-gray-700'\n                }`}\n              >\n                {paymentStatus === 'completed' ? 'Adquirir Mais DePix' : 'Cancelar e Adquirir DePix'}\n              </button>\n            </div>\n          ) : (\n            <div className=\"flex flex-col items-center justify-center h-64 text-gray-500\">\n              <QrCode size={64} className=\"mb-4\" />\n              <p className=\"text-center text-gray-400\">\n                O QR Code aparecer√° aqui ap√≥s<br />\n                voc√™ gerar o dep√≥sito\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Recent Deposits */}\n      <div className=\"mt-8 bg-gray-800 rounded-lg shadow-lg p-6 border border-gray-700\">\n        <h2 className=\"text-xl font-semibold mb-4 text-white\">Aquisi√ß√µes Recentes</h2>\n        <div className=\"text-sm text-gray-400\">\n          <p>Seus dep√≥sitos recentes aparecer√£o aqui</p>\n        </div>\n      </div>\n            </>\n          )}\n        </>\n      )}\n\n      {/* Validation Modal */}\n      {showValidationModal && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n          <div className=\"bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4 border border-gray-700\">\n            <h2 className=\"text-xl font-bold mb-4 text-white flex items-center\">\n              <Shield className=\"mr-2 text-yellow-400\" size={24} />\n              Valida√ß√£o de Conta\n            </h2>\n            \n            <p className=\"text-gray-300 mb-4\">\n              Para gerar o QR Code de valida√ß√£o, informe o endere√ßo DePix onde voc√™ deseja receber os cr√©ditos ap√≥s a valida√ß√£o.\n            </p>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Endere√ßo DePix\n              </label>\n              <input\n                type=\"text\"\n                value={validationDepixAddress}\n                onChange={(e) => setValidationDepixAddress(e.target.value)}\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500 placeholder-gray-400\"\n                placeholder=\"Insira seu endere√ßo DePix\"\n                required\n              />\n            </div>\n            \n            <div className=\"bg-yellow-900/20 border border-yellow-600/30 rounded-lg p-3 mb-4\">\n              <p className=\"text-yellow-300 text-sm\">\n                <strong>Valor da valida√ß√£o:</strong> R$ {validationRequirements?.amount ? (validationRequirements.amount).toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : '2,00'}<br/>\n                Ap√≥s o pagamento, sua conta ser√° validada automaticamente.\n              </p>\n            </div>\n            \n            <div className=\"flex gap-3\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowValidationModal(false);\n                  setValidationDepixAddress('');\n                }}\n                className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                disabled={loading}\n              >\n                Cancelar\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleValidationPayment}\n                className=\"flex-1 px-4 py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded-lg transition-colors disabled:opacity-50\"\n                disabled={loading || !validationDepixAddress}\n              >\n                {loading ? (\n                  <>\n                    <Loader className=\"animate-spin mr-2\" size={16} />\n                    Gerando...\n                  </>\n                ) : (\n                  'Gerar QR Code'\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}