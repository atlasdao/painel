{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/lib/services.ts"],"sourcesContent":["import api from './api';\nimport { Transaction, DashboardStats, Balance, PixQRCode } from '@/app/types';\n\nexport const accountValidationService = {\n  async getValidationStatus(): Promise<any> {\n    const response = await api.get('/account-validation/status');\n    return response.data;\n  },\n\n  async createValidationPayment(depixAddress: string): Promise<any> {\n    const response = await api.post('/account-validation/create-payment', { depixAddress });\n    return response.data;\n  },\n\n  async getValidationRequirements(): Promise<any> {\n    const response = await api.get('/account-validation/requirements');\n    return response.data;\n  },\n\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/account-validation/limits');\n    return response.data;\n  },\n\n  async manualValidationCheck(): Promise<any> {\n    const response = await api.post('/account-validation/manual-check');\n    return response.data;\n  },\n};\n\nexport const pixService = {\n  async createDeposit(amount: number, pixKey?: string): Promise<PixQRCode> {\n    const response = await api.post<PixQRCode>('/pix/deposit', { amount, pixKey });\n    return response.data;\n  },\n\n  async generateQRCode(params: {\n    amount: number;\n    depixAddress: string; // Campo obrigat√≥rio\n    description?: string;\n    expirationMinutes?: number;\n  }): Promise<any> {\n    const response = await api.post('/pix/qrcode', params);\n    return response.data;\n  },\n\n  async createWithdraw(amount: number, pixKey: string): Promise<Transaction> {\n    const response = await api.post<Transaction>('/pix/withdraw', { amount, pixKey });\n    return response.data;\n  },\n\n  async getTransactions(params?: { limit?: number; offset?: number }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get<Transaction[]>('/pix/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async getTransaction(id: number): Promise<Transaction> {\n    const response = await api.get<Transaction>(`/pix/transactions/${id}`);\n    return response.data;\n  },\n\n  async getBalance(): Promise<Balance> {\n    const response = await api.get<Balance>('/pix/balance');\n    return response.data;\n  },\n\n  async checkDepositStatus(transactionId: string): Promise<any> {\n    const response = await api.get<any>(`/pix/deposit/${transactionId}/status`);\n    return response.data;\n  },\n};\n\nexport const adminService = {\n  async getDashboardStats(): Promise<DashboardStats> {\n    const response = await api.get<DashboardStats>('/admin/dashboard');\n    return response.data;\n  },\n\n  async getAllTransactions(params?: { \n    limit?: number; \n    offset?: number;\n    status?: string;\n    userId?: number | string;\n    type?: string;\n  }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset,\n      status: params.status,\n      userId: params.userId ? (typeof params.userId === 'string' ? params.userId : params.userId.toString()) : undefined,\n      type: params.type\n    } : undefined;\n    const response = await api.get<Transaction[]>('/admin/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async updateTransactionStatus(\n    transactionId: number, \n    status: 'COMPLETED' | 'FAILED'\n  ): Promise<Transaction> {\n    const response = await api.patch<Transaction>(\n      `/admin/transactions/${transactionId}`,\n      { status }\n    );\n    return response.data;\n  },\n\n  async getUsers(params?: { limit?: number; offset?: number }): Promise<any[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get('/admin/users', { params: apiParams });\n    return response.data;\n  },\n\n  async createUser(data: { username: string; email: string; password: string; role: string }): Promise<any> {\n    const response = await api.post('/admin/users', data);\n    return response.data;\n  },\n\n  async updateUser(userId: string, data: any): Promise<any> {\n    const response = await api.patch(`/admin/users/${userId}`, data);\n    return response.data;\n  },\n\n  async deleteUser(userId: string): Promise<void> {\n    await api.delete(`/admin/users/${userId}`);\n  },\n\n  async generateApiKey(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/generate-api-key`);\n    return response.data;\n  },\n\n  async updateUserMedLimits(userId: string, limits: any): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/med-limits`, limits);\n    return response.data;\n  },\n\n  async adjustUserReputation(userId: string, reputation: any): Promise<any> {\n    const response = await api.put(`/account-validation/user/${userId}/limits`, reputation);\n    return response.data;\n  },\n\n  async getSystemStats(): Promise<any> {\n    const response = await api.get('/admin/stats');\n    return response.data;\n  },\n\n  async getUserStats(userId?: string): Promise<any> {\n    if (userId) {\n      const response = await api.get(`/admin/users/${userId}/stats`);\n      return response.data;\n    }\n    const response = await api.get('/admin/stats/users');\n    return response.data;\n  },\n\n  async getAuditStats(startDate?: Date, endDate?: Date): Promise<any> {\n    const params = {\n      startDate: startDate?.toISOString(),\n      endDate: endDate?.toISOString(),\n    };\n    const response = await api.get('/admin/stats/audit', { params });\n    return response.data;\n  },\n\n  async getAuditLogs(params?: {\n    skip?: number;\n    take?: number;\n    userId?: string;\n    action?: string;\n    resource?: string;\n    startDate?: Date;\n    endDate?: Date;\n  }): Promise<any[]> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      userId: params.userId,\n      action: params.action,\n      resource: params.resource,\n      startDate: params.startDate?.toISOString(),\n      endDate: params.endDate?.toISOString(),\n    } : undefined;\n    const response = await api.get('/admin/audit-logs', { params: apiParams });\n    return response.data;\n  },\n\n  // User Limits Management (MED Compliance)\n  async getAllUsersWithLimits(params?: {\n    skip?: number;\n    take?: number;\n    isFirstDay?: boolean;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n  }): Promise<any> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      isFirstDay: params.isFirstDay,\n      isKycVerified: params.isKycVerified,\n      isHighRiskUser: params.isHighRiskUser,\n    } : undefined;\n    const response = await api.get('/admin/users/limits', { params: apiParams });\n    return response.data;\n  },\n\n  async getUserLimits(userId: string): Promise<any> {\n    const response = await api.get(`/admin/users/${userId}/limits`);\n    return response.data;\n  },\n\n  async updateUserLimits(userId: string, limits: {\n    dailyDepositLimit?: number;\n    dailyWithdrawLimit?: number;\n    dailyTransferLimit?: number;\n    maxDepositPerTx?: number;\n    maxWithdrawPerTx?: number;\n    maxTransferPerTx?: number;\n    monthlyDepositLimit?: number;\n    monthlyWithdrawLimit?: number;\n    monthlyTransferLimit?: number;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n    notes?: string;\n  }): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/limits`, limits);\n    return response.data;\n  },\n\n  async resetUserFirstDay(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/reset-first-day`);\n    return response.data;\n  },\n\n  async applyKycLimits(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/apply-kyc-limits`);\n    return response.data;\n  },\n};\n\nexport const userService = {\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/pix/limits');\n    return response.data;\n  },\n};\n\nexport const apiKeyService = {\n  async getApiKeyStatus(): Promise<{ hasApiKey: boolean; createdAt?: string }> {\n    const response = await api.get('/auth/apitoken');\n    return response.data;\n  },\n\n  async generateApiKey(data: { name?: string; expirationDays?: number }): Promise<any> {\n    const response = await api.post('/auth/apitoken', data);\n    return response.data;\n  },\n\n  async revokeApiKey(): Promise<void> {\n    await api.delete('/auth/apitoken');\n  },\n};\n\nexport const apiKeyRequestService = {\n  async getMyRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-requests');\n    return response.data;\n  },\n\n  async getMyApiKeys(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-api-keys');\n    return response.data;\n  },\n\n  async createRequest(data: {\n    usageReason: string;\n    serviceUrl: string;\n    estimatedVolume: string;\n    usageType: 'SINGLE_CPF' | 'MULTIPLE_CPF';\n  }): Promise<any> {\n    const response = await api.post('/api-key-requests', data);\n    return response.data;\n  },\n\n  async getPendingRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests');\n    return response.data;\n  },\n\n  async approveRequest(requestId: string, data?: { approvalNotes?: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/approve`, data || {});\n    return response.data;\n  },\n\n  async rejectRequest(requestId: string, data: { approvalNotes: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/reject`, data);\n    return response.data;\n  },\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/%28dashboard%29/admin/audit/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { adminService } from '@/app/lib/services';\nimport {\n  Search,\n  Filter,\n  Download,\n  Calendar,\n  Activity,\n  User,\n  Shield,\n  Eye,\n  X,\n  Copy,\n  Clock,\n  FileText,\n} from 'lucide-react';\nimport toast, { Toaster } from 'react-hot-toast';\n\ninterface AuditLog {\n  id: string;\n  userId?: string;\n  user?: {\n    username: string;\n    email: string;\n  };\n  transactionId?: string;\n  action: string;\n  resource: string;\n  resourceId?: string;\n  ipAddress?: string;\n  userAgent?: string;\n  requestBody?: string;\n  responseBody?: string;\n  statusCode?: number;\n  duration?: number;\n  createdAt: string;\n}\n\nexport default function AdminAuditPage() {\n  const [auditLogs, setAuditLogs] = useState<AuditLog[]>([]);\n  const [selectedLog, setSelectedLog] = useState<AuditLog | null>(null);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    userId: '',\n    action: '',\n    resource: '',\n    startDate: '',\n    endDate: '',\n    search: '',\n  });\n  const [stats, setStats] = useState({\n    total: 0,\n    todayCount: 0,\n    weekCount: 0,\n    monthCount: 0,\n  });\n\n  useEffect(() => {\n    loadAuditLogs();\n  }, [filters]);\n\n  const loadAuditLogs = async () => {\n    setLoading(true);\n    try {\n      const data = await adminService.getAuditLogs({\n        userId: filters.userId || undefined,\n        action: filters.action || undefined,\n        resource: filters.resource || undefined,\n        startDate: filters.startDate ? new Date(filters.startDate) : undefined,\n        endDate: filters.endDate ? new Date(filters.endDate) : undefined,\n        take: 100, // Limit to 100 records for performance\n      });\n      setAuditLogs(data);\n      calculateStats(data);\n    } catch (error) {\n      console.error('Error loading audit logs:', error);\n      toast.error('Erro ao carregar logs de auditoria');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateStats = (data: AuditLog[]) => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n    const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n    const stats = data.reduce(\n      (acc, log) => {\n        const logDate = new Date(log.createdAt);\n        acc.total++;\n        if (logDate >= today) acc.todayCount++;\n        if (logDate >= weekAgo) acc.weekCount++;\n        if (logDate >= monthAgo) acc.monthCount++;\n        return acc;\n      },\n      { total: 0, todayCount: 0, weekCount: 0, monthCount: 0 }\n    );\n    setStats(stats);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedLog(null);\n  };\n\n  const copyToClipboard = async (text: string, label: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      toast.success(`${label} copiado!`);\n    } catch (error) {\n      toast.error('Erro ao copiar');\n    }\n  };\n\n  const formatDate = (date: string) => {\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    }).format(new Date(date));\n  };\n\n  const getActionIcon = (action: string) => {\n    if (action.includes('LOGIN') || action.includes('LOGOUT')) {\n      return <User className=\"w-4 h-4 text-blue-400\" />;\n    }\n    if (action.includes('CREATE') || action.includes('POST')) {\n      return <div className=\"w-4 h-4 bg-green-400 rounded-full\" />;\n    }\n    if (action.includes('UPDATE') || action.includes('PUT') || action.includes('PATCH')) {\n      return <div className=\"w-4 h-4 bg-yellow-400 rounded-full\" />;\n    }\n    if (action.includes('DELETE')) {\n      return <div className=\"w-4 h-4 bg-red-400 rounded-full\" />;\n    }\n    return <Activity className=\"w-4 h-4 text-gray-400\" />;\n  };\n\n  const getStatusColor = (statusCode?: number) => {\n    if (!statusCode) return 'text-gray-400';\n    if (statusCode >= 200 && statusCode < 300) return 'text-green-400';\n    if (statusCode >= 400 && statusCode < 500) return 'text-yellow-400';\n    if (statusCode >= 500) return 'text-red-400';\n    return 'text-gray-400';\n  };\n\n  const exportToCSV = () => {\n    const headers = ['Data', 'Usu√°rio', 'A√ß√£o', 'Recurso', 'Status', 'IP', 'Dura√ß√£o (ms)'];\n    const rows = auditLogs.map((log) => [\n      formatDate(log.createdAt),\n      log.user?.username || log.userId || 'Sistema',\n      log.action,\n      log.resource,\n      log.statusCode || 'N/A',\n      log.ipAddress || 'N/A',\n      log.duration || 'N/A',\n    ]);\n\n    const csvContent = [headers, ...rows]\n      .map((row) => row.map(cell => `\"${cell}\"`).join(','))\n      .join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `audit_logs_${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    toast.success('Logs de auditoria exportados com sucesso!');\n  };\n\n  const filteredLogs = auditLogs.filter((log) => {\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      return (\n        log.action.toLowerCase().includes(searchTerm) ||\n        log.resource.toLowerCase().includes(searchTerm) ||\n        log.user?.username?.toLowerCase().includes(searchTerm) ||\n        log.userId?.toLowerCase().includes(searchTerm) ||\n        log.ipAddress?.toLowerCase().includes(searchTerm)\n      );\n    }\n    return true;\n  });\n\n  return (\n    <>\n      <Toaster position=\"top-right\" />\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-white\">\n              Logs de Auditoria\n            </h1>\n            <p className=\"text-gray-400 mt-2\">\n              Visualize e monitore todas as a√ß√µes realizadas no sistema\n            </p>\n          </div>\n          <button\n            onClick={exportToCSV}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <Download className=\"w-5 h-5\" />\n            Exportar CSV\n          </button>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Total de Logs</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {stats.total}\n                </p>\n              </div>\n              <FileText className=\"w-8 h-8 text-purple-400\" />\n            </div>\n          </div>\n\n          <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Hoje</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {stats.todayCount}\n                </p>\n              </div>\n              <Clock className=\"w-8 h-8 text-green-400\" />\n            </div>\n          </div>\n\n          <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">√öltimos 7 dias</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {stats.weekCount}\n                </p>\n              </div>\n              <Calendar className=\"w-8 h-8 text-blue-400\" />\n            </div>\n          </div>\n\n          <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">√öltimos 30 dias</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {stats.monthCount}\n                </p>\n              </div>\n              <Shield className=\"w-8 h-8 text-yellow-400\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n          <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Buscar\n              </label>\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"A√ß√£o, recurso, usu√°rio...\"\n                  className=\"w-full pl-10 pr-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 placeholder-gray-400\"\n                  value={filters.search}\n                  onChange={(e) =>\n                    setFilters({ ...filters, search: e.target.value })\n                  }\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                A√ß√£o\n              </label>\n              <input\n                type=\"text\"\n                placeholder=\"Ex: LOGIN, GET, POST...\"\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 placeholder-gray-400\"\n                value={filters.action}\n                onChange={(e) =>\n                  setFilters({ ...filters, action: e.target.value })\n                }\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Recurso\n              </label>\n              <input\n                type=\"text\"\n                placeholder=\"Ex: /admin/users...\"\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 placeholder-gray-400\"\n                value={filters.resource}\n                onChange={(e) =>\n                  setFilters({ ...filters, resource: e.target.value })\n                }\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Data Inicial\n              </label>\n              <input\n                type=\"date\"\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500\"\n                value={filters.startDate}\n                onChange={(e) =>\n                  setFilters({ ...filters, startDate: e.target.value })\n                }\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Data Final\n              </label>\n              <input\n                type=\"date\"\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500\"\n                value={filters.endDate}\n                onChange={(e) =>\n                  setFilters({ ...filters, endDate: e.target.value })\n                }\n              />\n            </div>\n\n            <div className=\"flex items-end\">\n              <button\n                onClick={() =>\n                  setFilters({\n                    userId: '',\n                    action: '',\n                    resource: '',\n                    startDate: '',\n                    endDate: '',\n                    search: '',\n                  })\n                }\n                className=\"w-full px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-500 transition-colors\"\n              >\n                Limpar Filtros\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Audit Logs Table */}\n        <div className=\"bg-gray-800 rounded-lg shadow-lg border border-gray-700 overflow-hidden\">\n          {loading ? (\n            <div className=\"flex items-center justify-center h-64\">\n              <div className=\"w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n            </div>\n          ) : filteredLogs.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <FileText className=\"w-12 h-12 text-gray-500 mx-auto mb-4\" />\n              <p className=\"text-gray-400\">Nenhum log de auditoria encontrado</p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-700\">\n                  <tr>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Data/Hora\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Usu√°rio\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      A√ß√£o\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Recurso\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Status\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      IP Address\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Dura√ß√£o\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      A√ß√µes\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-700\">\n                  {filteredLogs.map((log) => (\n                    <tr\n                      key={log.id}\n                      className=\"hover:bg-gray-700/50 transition-colors\"\n                    >\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-sm text-gray-300\">\n                          {formatDate(log.createdAt)}\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center gap-2\">\n                          <User className=\"w-4 h-4 text-gray-400\" />\n                          <span className=\"text-sm text-gray-200\">\n                            {log.user?.username || log.userId || 'Sistema'}\n                          </span>\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center gap-2\">\n                          {getActionIcon(log.action)}\n                          <span className=\"text-sm text-gray-200\">\n                            {log.action}\n                          </span>\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-sm text-gray-300 font-mono\">\n                          {log.resource}\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className={`text-sm font-semibold ${getStatusColor(log.statusCode)}`}>\n                          {log.statusCode || 'N/A'}\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-sm text-gray-400 font-mono\">\n                          {log.ipAddress || 'N/A'}\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-sm text-gray-400\">\n                          {log.duration ? `${log.duration}ms` : 'N/A'}\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <button \n                          onClick={() => {\n                            setSelectedLog(log);\n                            setShowModal(true);\n                          }}\n                          className=\"text-blue-400 hover:text-blue-300 text-sm flex items-center gap-1\"\n                        >\n                          <Eye className=\"w-4 h-4\" />\n                          Ver detalhes\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        {/* Audit Log Details Modal */}\n        {showModal && selectedLog && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-gray-800 border border-gray-700 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"flex items-center justify-between p-6 border-b border-gray-700\">\n                <h2 className=\"text-xl font-bold text-white flex items-center\">\n                  <FileText className=\"w-6 h-6 mr-2\" />\n                  Detalhes do Log de Auditoria\n                </h2>\n                <button\n                  onClick={handleCloseModal}\n                  className=\"text-gray-400 hover:text-white transition-colors\"\n                >\n                  <X className=\"w-6 h-6\" />\n                </button>\n              </div>\n\n              <div className=\"p-6 space-y-6\">\n                {/* Basic Information */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">ID do Log</h3>\n                    <div className=\"flex items-center justify-between bg-gray-700 p-3 rounded-lg\">\n                      <code className=\"text-sm font-mono text-white\">{selectedLog.id}</code>\n                      <button\n                        onClick={() => copyToClipboard(selectedLog.id, 'ID do log')}\n                        className=\"text-blue-400 hover:text-blue-300 transition-colors\"\n                      >\n                        <Copy className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Data/Hora</h3>\n                    <p className=\"text-white bg-gray-700 p-3 rounded-lg\">{formatDate(selectedLog.createdAt)}</p>\n                  </div>\n                </div>\n\n                {/* User Information */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Usu√°rio</h3>\n                    <div className=\"bg-gray-700 p-3 rounded-lg\">\n                      <p className=\"text-white\">{selectedLog.user?.username || 'Sistema'}</p>\n                      {selectedLog.user?.email && (\n                        <p className=\"text-gray-400 text-sm\">{selectedLog.user.email}</p>\n                      )}\n                      {selectedLog.userId && (\n                        <p className=\"text-gray-400 text-xs font-mono mt-1\">ID: {selectedLog.userId}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Endere√ßo IP</h3>\n                    <p className=\"text-white bg-gray-700 p-3 rounded-lg font-mono\">\n                      {selectedLog.ipAddress || 'N/A'}\n                    </p>\n                  </div>\n                </div>\n\n                {/* Action and Resource */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">A√ß√£o</h3>\n                    <div className=\"flex items-center bg-gray-700 p-3 rounded-lg\">\n                      {getActionIcon(selectedLog.action)}\n                      <span className=\"ml-2 text-white font-medium\">{selectedLog.action}</span>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Recurso</h3>\n                    <p className=\"text-white bg-gray-700 p-3 rounded-lg font-mono break-all\">\n                      {selectedLog.resource}\n                    </p>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Status HTTP</h3>\n                    <p className={`text-lg font-bold bg-gray-700 p-3 rounded-lg ${getStatusColor(selectedLog.statusCode)}`}>\n                      {selectedLog.statusCode || 'N/A'}\n                    </p>\n                  </div>\n                </div>\n\n                {/* Performance and Technical Details */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Dura√ß√£o da Requisi√ß√£o</h3>\n                    <p className=\"text-white bg-gray-700 p-3 rounded-lg\">\n                      {selectedLog.duration ? `${selectedLog.duration}ms` : 'N/A'}\n                    </p>\n                  </div>\n\n                  {selectedLog.resourceId && (\n                    <div>\n                      <h3 className=\"text-sm font-medium text-gray-400 mb-2\">ID do Recurso</h3>\n                      <div className=\"flex items-center justify-between bg-gray-700 p-3 rounded-lg\">\n                        <code className=\"text-sm font-mono text-yellow-400\">{selectedLog.resourceId}</code>\n                        <button\n                          onClick={() => copyToClipboard(selectedLog.resourceId!, 'ID do recurso')}\n                          className=\"text-blue-400 hover:text-blue-300 transition-colors\"\n                        >\n                          <Copy className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* User Agent */}\n                {selectedLog.userAgent && (\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">User Agent</h3>\n                    <div className=\"flex items-center justify-between bg-gray-700 p-3 rounded-lg\">\n                      <p className=\"text-white text-sm break-all\">{selectedLog.userAgent}</p>\n                      <button\n                        onClick={() => copyToClipboard(selectedLog.userAgent!, 'User Agent')}\n                        className=\"text-blue-400 hover:text-blue-300 transition-colors ml-2 flex-shrink-0\"\n                      >\n                        <Copy className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {/* Request Body */}\n                {selectedLog.requestBody && (\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Dados da Requisi√ß√£o</h3>\n                    <details className=\"group\">\n                      <summary className=\"text-sm font-medium text-blue-400 mb-2 cursor-pointer hover:text-blue-300 transition-colors\">\n                        üì§ Clique para expandir\n                      </summary>\n                      <pre className=\"text-xs text-gray-300 bg-gray-900 p-3 rounded-lg overflow-x-auto mt-2 border border-gray-600\">\n                        {JSON.stringify(JSON.parse(selectedLog.requestBody), null, 2)}\n                      </pre>\n                    </details>\n                  </div>\n                )}\n\n                {/* Response Body */}\n                {selectedLog.responseBody && (\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Resposta da API</h3>\n                    <details className=\"group\">\n                      <summary className=\"text-sm font-medium text-green-400 mb-2 cursor-pointer hover:text-green-300 transition-colors\">\n                        üì• Clique para expandir\n                      </summary>\n                      <pre className=\"text-xs text-gray-300 bg-gray-900 p-3 rounded-lg overflow-x-auto mt-2 border border-gray-600\">\n                        {JSON.stringify(JSON.parse(selectedLog.responseBody), null, 2)}\n                      </pre>\n                    </details>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"flex justify-end p-6 border-t border-gray-700\">\n                <button\n                  onClick={handleCloseModal}\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition duration-200\"\n                >\n                  Fechar\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}