{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/lib/api.ts"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:20000/api/v1';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = Cookies.get('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const refreshToken = Cookies.get('refresh_token');\n        if (refreshToken) {\n          const response = await axios.post(`${API_URL}/auth/refresh`, {\n            refreshToken: refreshToken,\n          });\n\n          const { accessToken } = response.data;\n          \n          Cookies.set('access_token', accessToken);\n          Cookies.set('refresh_token', refreshToken); // Keep the same refresh token\n          \n          originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        // Refresh failed, redirect to login\n        Cookies.remove('access_token');\n        Cookies.remove('refresh_token');\n        window.location.href = '/login';\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport { api };\nexport default api;"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,UAAU,uEAAmC;AAEnD,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,wCAAwC;AACxC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,CAAC;IACC,MAAM,QAAQ,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;IAC1B,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,+CAA+C;AAC/C,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,WAAa,UACd,OAAO;IACL,MAAM,kBAAkB,MAAM,MAAM;IAEpC,IAAI,MAAM,QAAQ,EAAE,WAAW,OAAO,CAAC,gBAAgB,MAAM,EAAE;QAC7D,gBAAgB,MAAM,GAAG;QAEzB,IAAI;YACF,MAAM,eAAe,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;YACjC,IAAI,cAAc;gBAChB,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,aAAa,CAAC,EAAE;oBAC3D,cAAc;gBAChB;gBAEA,MAAM,EAAE,WAAW,EAAE,GAAG,SAAS,IAAI;gBAErC,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,gBAAgB;gBAC5B,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,iBAAiB,eAAe,8BAA8B;gBAE1E,gBAAgB,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,aAAa;gBAC/D,OAAO,IAAI;YACb;QACF,EAAE,OAAO,cAAc;YACrB,oCAAoC;YACpC,qJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;YACf,qJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;YACf,OAAO,QAAQ,CAAC,IAAI,GAAG;QACzB;IACF;IAEA,OAAO,QAAQ,MAAM,CAAC;AACxB;;uCAIa","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/lib/auth.ts"],"sourcesContent":["import api from './api';\nimport { AuthResponse, User } from '@/app/types';\nimport Cookies from 'js-cookie';\n\nexport const authService = {\n  async login(email: string, password: string): Promise<AuthResponse> {\n    const response = await api.post<any>('/auth/login', { \n      emailOrUsername: email, \n      password \n    });\n    const { accessToken, user } = response.data;\n    \n    Cookies.set('access_token', accessToken);\n    Cookies.set('refresh_token', ''); // API não retorna refresh token no login\n    Cookies.set('user', JSON.stringify(user));\n    \n    return {\n      access_token: accessToken,\n      refresh_token: '',\n      user\n    };\n  },\n\n  async register(username: string, email: string, password: string): Promise<AuthResponse> {\n    const response = await api.post<any>('/auth/register', {\n      username,\n      email,\n      password,\n    });\n    const { accessToken, user } = response.data;\n    \n    Cookies.set('access_token', accessToken);\n    Cookies.set('refresh_token', ''); // API não retorna refresh token no register\n    Cookies.set('user', JSON.stringify(user));\n    \n    return {\n      access_token: accessToken,\n      refresh_token: '',\n      user\n    };\n  },\n\n  async logout(): Promise<void> {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      Cookies.remove('access_token');\n      Cookies.remove('refresh_token');\n      Cookies.remove('user');\n      window.location.href = '/login';\n    }\n  },\n\n  async getCurrentUser(): Promise<User | null> {\n    const userCookie = Cookies.get('user');\n    if (userCookie) {\n      try {\n        return JSON.parse(userCookie);\n      } catch {\n        return null;\n      }\n    }\n    return null;\n  },\n\n  isAuthenticated(): boolean {\n    return !!Cookies.get('access_token');\n  },\n\n  isAdmin(): boolean {\n    const userCookie = Cookies.get('user');\n    if (userCookie) {\n      try {\n        const user = JSON.parse(userCookie);\n        return user.roles?.includes('ADMIN') || user.role === 'ADMIN';\n      } catch {\n        return false;\n      }\n    }\n    return false;\n  },\n};"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEO,MAAM,cAAc;IACzB,MAAM,OAAM,KAAa,EAAE,QAAgB;QACzC,MAAM,WAAW,MAAM,iHAAA,CAAA,UAAG,CAAC,IAAI,CAAM,eAAe;YAClD,iBAAiB;YACjB;QACF;QACA,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,SAAS,IAAI;QAE3C,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,gBAAgB;QAC5B,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,iBAAiB,KAAK,yCAAyC;QAC3E,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,SAAS,CAAC;QAEnC,OAAO;YACL,cAAc;YACd,eAAe;YACf;QACF;IACF;IAEA,MAAM,UAAS,QAAgB,EAAE,KAAa,EAAE,QAAgB;QAC9D,MAAM,WAAW,MAAM,iHAAA,CAAA,UAAG,CAAC,IAAI,CAAM,kBAAkB;YACrD;YACA;YACA;QACF;QACA,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,SAAS,IAAI;QAE3C,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,gBAAgB;QAC5B,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,iBAAiB,KAAK,4CAA4C;QAC9E,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,SAAS,CAAC;QAEnC,OAAO;YACL,cAAc;YACd,eAAe;YACf;QACF;IACF;IAEA,MAAM;QACJ,IAAI;YACF,MAAM,iHAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QACjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;QACjC,SAAU;YACR,qJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;YACf,qJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;YACf,qJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;YACf,OAAO,QAAQ,CAAC,IAAI,GAAG;QACzB;IACF;IAEA,MAAM;QACJ,MAAM,aAAa,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;QAC/B,IAAI,YAAY;YACd,IAAI;gBACF,OAAO,KAAK,KAAK,CAAC;YACpB,EAAE,OAAM;gBACN,OAAO;YACT;QACF;QACA,OAAO;IACT;IAEA;QACE,OAAO,CAAC,CAAC,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;IACvB;IAEA;QACE,MAAM,aAAa,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;QAC/B,IAAI,YAAY;YACd,IAAI;gBACF,MAAM,OAAO,KAAK,KAAK,CAAC;gBACxB,OAAO,KAAK,KAAK,EAAE,SAAS,YAAY,KAAK,IAAI,KAAK;YACxD,EAAE,OAAM;gBACN,OAAO;YACT;QACF;QACA,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/%28auth%29/login/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { authService } from '@/app/lib/auth';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Eye, EyeOff, LogIn, AlertCircle } from 'lucide-react';\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setErrors([]);\n\n    try {\n      await authService.login(email, password);\n      toast.success('Login realizado com sucesso!');\n      router.push('/dashboard');\n    } catch (error: any) {\n      const message = error.response?.data?.message || 'Erro ao fazer login';\n      const apiErrors = error.response?.data?.errors;\n      \n      if (apiErrors && Array.isArray(apiErrors)) {\n        setErrors(apiErrors.map((err: any) => err.message || err));\n        apiErrors.forEach((err: any) => {\n          toast.error(err.message || err);\n        });\n      } else {\n        setErrors([message]);\n        toast.error(message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Toaster position=\"top-right\" />\n      <div className=\"card bg-gray-800 border-gray-700\">\n        <div className=\"mb-6\">\n          <h2 className=\"text-2xl font-bold text-white\">Entrar</h2>\n          <p className=\"text-gray-400 mt-2\">Acesse sua conta para continuar</p>\n        </div>\n\n        <form className=\"space-y-6\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300\">\n              Email ou Nome de Usuário\n            </label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              autoComplete=\"username email\"\n              required\n              className=\"input-field mt-1 bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500\"\n              placeholder=\"seu@email.com ou username\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-300\">\n              Senha\n            </label>\n            <div className=\"relative mt-1\">\n              <input\n                id=\"password\"\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                autoComplete=\"current-password\"\n                required\n                className=\"input-field pr-10 bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500\"\n                placeholder=\"••••••••\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <button\n                type=\"button\"\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                onClick={() => setShowPassword(!showPassword)}\n              >\n                {showPassword ? (\n                  <EyeOff className=\"h-5 w-5 text-gray-400 hover:text-gray-300\" />\n                ) : (\n                  <Eye className=\"h-5 w-5 text-gray-400 hover:text-gray-300\" />\n                )}\n              </button>\n            </div>\n          </div>\n\n          {/* Error Display */}\n          {errors.length > 0 && (\n            <div className=\"bg-red-900/20 border border-red-500 rounded-lg p-3\">\n              <div className=\"flex items-start\">\n                <AlertCircle className=\"text-red-400 mr-2 flex-shrink-0 mt-0.5\" size={16} />\n                <div className=\"text-sm text-red-400\">\n                  {errors.length === 1 ? (\n                    errors[0]\n                  ) : (\n                    <ul className=\"list-disc list-inside space-y-1\">\n                      {errors.map((error, index) => (\n                        <li key={index}>{error}</li>\n                      ))}\n                    </ul>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember-me\"\n                name=\"remember-me\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-600 bg-gray-700 rounded\"\n              />\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-400\">\n                Lembrar de mim\n              </label>\n            </div>\n\n            <div className=\"text-sm\">\n              <Link href=\"/forgot-password\" className=\"font-medium text-blue-400 hover:text-blue-300\">\n                Esqueceu a senha?\n              </Link>\n            </div>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"btn-primary w-full flex items-center justify-center gap-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white font-medium py-2 px-4 rounded-md transition-colors\"\n          >\n            {loading ? (\n              <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n            ) : (\n              <>\n                <LogIn className=\"w-5 h-5\" />\n                Entrar\n              </>\n            )}\n          </button>\n\n          <div className=\"text-center\">\n            <span className=\"text-sm text-gray-400\">\n              Não tem uma conta?{' '}\n              <Link href=\"/register\" className=\"font-medium text-blue-400 hover:text-blue-300\">\n                Cadastre-se\n              </Link>\n            </span>\n          </div>\n        </form>\n\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}