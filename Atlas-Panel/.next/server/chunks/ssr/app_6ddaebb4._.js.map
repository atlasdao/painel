{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/lib/services.ts"],"sourcesContent":["import api from './api';\nimport { Transaction, DashboardStats, Balance, PixQRCode } from '@/app/types';\n\nexport const accountValidationService = {\n  async getValidationStatus(): Promise<any> {\n    const response = await api.get('/account-validation/status');\n    return response.data;\n  },\n\n  async createValidationPayment(depixAddress: string): Promise<any> {\n    const response = await api.post('/account-validation/create-payment', { depixAddress });\n    return response.data;\n  },\n\n  async getValidationRequirements(): Promise<any> {\n    const response = await api.get('/account-validation/requirements');\n    return response.data;\n  },\n\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/account-validation/limits');\n    return response.data;\n  },\n};\n\nexport const pixService = {\n  async createDeposit(amount: number, pixKey?: string): Promise<PixQRCode> {\n    const response = await api.post<PixQRCode>('/pix/deposit', { amount, pixKey });\n    return response.data;\n  },\n\n  async generateQRCode(params: {\n    amount: number;\n    depixAddress: string; // Campo obrigat√≥rio\n    description?: string;\n    expirationMinutes?: number;\n  }): Promise<any> {\n    const response = await api.post('/pix/qrcode', params);\n    return response.data;\n  },\n\n  async createWithdraw(amount: number, pixKey: string): Promise<Transaction> {\n    const response = await api.post<Transaction>('/pix/withdraw', { amount, pixKey });\n    return response.data;\n  },\n\n  async getTransactions(params?: { limit?: number; offset?: number }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get<Transaction[]>('/pix/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async getTransaction(id: number): Promise<Transaction> {\n    const response = await api.get<Transaction>(`/pix/transactions/${id}`);\n    return response.data;\n  },\n\n  async getBalance(): Promise<Balance> {\n    const response = await api.get<Balance>('/pix/balance');\n    return response.data;\n  },\n\n  async checkDepositStatus(transactionId: string): Promise<any> {\n    const response = await api.get<any>(`/pix/deposit/${transactionId}/status`);\n    return response.data;\n  },\n};\n\nexport const adminService = {\n  async getDashboardStats(): Promise<DashboardStats> {\n    const response = await api.get<DashboardStats>('/admin/dashboard');\n    return response.data;\n  },\n\n  async getAllTransactions(params?: { \n    limit?: number; \n    offset?: number;\n    status?: string;\n    userId?: number | string;\n    type?: string;\n  }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset,\n      status: params.status,\n      userId: params.userId ? (typeof params.userId === 'string' ? params.userId : params.userId.toString()) : undefined,\n      type: params.type\n    } : undefined;\n    const response = await api.get<Transaction[]>('/admin/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async updateTransactionStatus(\n    transactionId: number, \n    status: 'COMPLETED' | 'FAILED'\n  ): Promise<Transaction> {\n    const response = await api.patch<Transaction>(\n      `/admin/transactions/${transactionId}`,\n      { status }\n    );\n    return response.data;\n  },\n\n  async getUsers(params?: { limit?: number; offset?: number }): Promise<any[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get('/admin/users', { params: apiParams });\n    return response.data;\n  },\n\n  async createUser(data: { username: string; email: string; password: string; role: string }): Promise<any> {\n    const response = await api.post('/admin/users', data);\n    return response.data;\n  },\n\n  async updateUser(userId: string, data: any): Promise<any> {\n    const response = await api.patch(`/admin/users/${userId}`, data);\n    return response.data;\n  },\n\n  async deleteUser(userId: string): Promise<void> {\n    await api.delete(`/admin/users/${userId}`);\n  },\n\n  async generateApiKey(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/generate-api-key`);\n    return response.data;\n  },\n\n  async updateUserMedLimits(userId: string, limits: any): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/med-limits`, limits);\n    return response.data;\n  },\n\n  async adjustUserReputation(userId: string, reputation: any): Promise<any> {\n    const response = await api.put(`/account-validation/user/${userId}/limits`, reputation);\n    return response.data;\n  },\n\n  async getSystemStats(): Promise<any> {\n    const response = await api.get('/admin/stats');\n    return response.data;\n  },\n\n  async getUserStats(userId?: string): Promise<any> {\n    if (userId) {\n      const response = await api.get(`/admin/users/${userId}/stats`);\n      return response.data;\n    }\n    const response = await api.get('/admin/stats/users');\n    return response.data;\n  },\n\n  async getAuditStats(startDate?: Date, endDate?: Date): Promise<any> {\n    const params = {\n      startDate: startDate?.toISOString(),\n      endDate: endDate?.toISOString(),\n    };\n    const response = await api.get('/admin/stats/audit', { params });\n    return response.data;\n  },\n\n  async getAuditLogs(params?: {\n    skip?: number;\n    take?: number;\n    userId?: string;\n    action?: string;\n    resource?: string;\n    startDate?: Date;\n    endDate?: Date;\n  }): Promise<any[]> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      userId: params.userId,\n      action: params.action,\n      resource: params.resource,\n      startDate: params.startDate?.toISOString(),\n      endDate: params.endDate?.toISOString(),\n    } : undefined;\n    const response = await api.get('/admin/audit-logs', { params: apiParams });\n    return response.data;\n  },\n\n  // User Limits Management (MED Compliance)\n  async getAllUsersWithLimits(params?: {\n    skip?: number;\n    take?: number;\n    isFirstDay?: boolean;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n  }): Promise<any> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      isFirstDay: params.isFirstDay,\n      isKycVerified: params.isKycVerified,\n      isHighRiskUser: params.isHighRiskUser,\n    } : undefined;\n    const response = await api.get('/admin/users/limits', { params: apiParams });\n    return response.data;\n  },\n\n  async getUserLimits(userId: string): Promise<any> {\n    const response = await api.get(`/admin/users/${userId}/limits`);\n    return response.data;\n  },\n\n  async updateUserLimits(userId: string, limits: {\n    dailyDepositLimit?: number;\n    dailyWithdrawLimit?: number;\n    dailyTransferLimit?: number;\n    maxDepositPerTx?: number;\n    maxWithdrawPerTx?: number;\n    maxTransferPerTx?: number;\n    monthlyDepositLimit?: number;\n    monthlyWithdrawLimit?: number;\n    monthlyTransferLimit?: number;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n    notes?: string;\n  }): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/limits`, limits);\n    return response.data;\n  },\n\n  async resetUserFirstDay(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/reset-first-day`);\n    return response.data;\n  },\n\n  async applyKycLimits(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/apply-kyc-limits`);\n    return response.data;\n  },\n};\n\nexport const userService = {\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/pix/limits');\n    return response.data;\n  },\n};\n\nexport const apiKeyService = {\n  async getApiKeyStatus(): Promise<{ hasApiKey: boolean; createdAt?: string }> {\n    const response = await api.get('/auth/apitoken');\n    return response.data;\n  },\n\n  async generateApiKey(data: { name?: string; expirationDays?: number }): Promise<any> {\n    const response = await api.post('/auth/apitoken', data);\n    return response.data;\n  },\n\n  async revokeApiKey(): Promise<void> {\n    await api.delete('/auth/apitoken');\n  },\n};\n\nexport const apiKeyRequestService = {\n  async getMyRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-requests');\n    return response.data;\n  },\n\n  async getMyApiKeys(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-api-keys');\n    return response.data;\n  },\n\n  async createRequest(data: {\n    usageReason: string;\n    serviceUrl: string;\n    estimatedVolume: string;\n    usageType: 'SINGLE_CPF' | 'MULTIPLE_CPF';\n  }): Promise<any> {\n    const response = await api.post('/api-key-requests', data);\n    return response.data;\n  },\n\n  async getPendingRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests');\n    return response.data;\n  },\n\n  async approveRequest(requestId: string, data?: { approvalNotes?: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/approve`, data || {});\n    return response.data;\n  },\n\n  async rejectRequest(requestId: string, data: { approvalNotes: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/reject`, data);\n    return response.data;\n  },\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/%28dashboard%29/admin/api-requests/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { apiKeyRequestService } from '@/app/lib/services';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { \n  Key, \n  CheckCircle, \n  XCircle, \n  Clock, \n  Eye,\n  Globe,\n  User,\n  Calendar,\n  FileText,\n  RefreshCw,\n  AlertTriangle,\n  TrendingUp,\n  Check,\n  X,\n  Copy,\n  Shield,\n  Activity,\n  Database,\n  Filter,\n  Search,\n  ChevronDown,\n  ChevronUp,\n  MessageSquare,\n  Link,\n  CreditCard\n} from 'lucide-react';\n\ninterface ApiKeyRequest {\n  id: string;\n  userId: string;\n  user?: {\n    id: string;\n    username: string;\n    email: string;\n  };\n  usageReason: string;\n  serviceUrl: string;\n  estimatedVolume: string;\n  usageType: 'SINGLE_CPF' | 'MULTIPLE_CPF';\n  status: 'PENDING' | 'APPROVED' | 'REJECTED' | 'REVOKED';\n  approvalNotes?: string;\n  generatedApiKey?: string;\n  createdAt: string;\n  approvedAt?: string;\n  rejectedAt?: string;\n  approvedBy?: string;\n}\n\nexport default function AdminApiRequestsPage() {\n  const [requests, setRequests] = useState<ApiKeyRequest[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [selectedRequest, setSelectedRequest] = useState<ApiKeyRequest | null>(null);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [showApprovalModal, setShowApprovalModal] = useState(false);\n  const [showRejectionModal, setShowRejectionModal] = useState(false);\n  const [approvalNotes, setApprovalNotes] = useState('');\n  const [rejectionReason, setRejectionReason] = useState('');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [expandedRow, setExpandedRow] = useState<string | null>(null);\n  const [showApiKey, setShowApiKey] = useState<{ [key: string]: boolean }>({});\n\n  useEffect(() => {\n    loadRequests();\n  }, []);\n\n  const loadRequests = async (isRefresh = false) => {\n    if (isRefresh) {\n      setRefreshing(true);\n    } else {\n      setLoading(true);\n    }\n    \n    try {\n      const data = await apiKeyRequestService.getPendingRequests();\n      setRequests(data);\n      toast.success('Solicita√ß√µes carregadas');\n    } catch (error) {\n      console.error('Error loading requests:', error);\n      toast.error('Erro ao carregar solicita√ß√µes');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  const handleApprove = async () => {\n    if (!selectedRequest) return;\n    \n    setIsProcessing(true);\n    try {\n      const result = await apiKeyRequestService.approveRequest(selectedRequest.id, { \n        approvalNotes: approvalNotes || undefined \n      });\n      \n      // Copy API key to clipboard if returned\n      if (result.apiKey) {\n        navigator.clipboard.writeText(result.apiKey);\n        toast.success('API Key gerada e copiada para a √°rea de transfer√™ncia!');\n      } else {\n        toast.success('Solicita√ß√£o aprovada com sucesso!');\n      }\n      \n      setShowApprovalModal(false);\n      setApprovalNotes('');\n      setSelectedRequest(null);\n      loadRequests();\n    } catch (error: any) {\n      console.error('Error approving request:', error);\n      const errorMessage = error.response?.data?.message || 'Erro ao aprovar solicita√ß√£o';\n      toast.error(errorMessage);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleReject = async () => {\n    if (!selectedRequest || !rejectionReason) {\n      toast.error('Por favor, forne√ßa um motivo para a rejei√ß√£o');\n      return;\n    }\n    \n    setIsProcessing(true);\n    try {\n      await apiKeyRequestService.rejectRequest(selectedRequest.id, { \n        approvalNotes: rejectionReason \n      });\n      toast.success('Solicita√ß√£o rejeitada');\n      setShowRejectionModal(false);\n      setRejectionReason('');\n      setSelectedRequest(null);\n      loadRequests();\n    } catch (error: any) {\n      console.error('Error rejecting request:', error);\n      const errorMessage = error.response?.data?.message || 'Erro ao rejeitar solicita√ß√£o';\n      toast.error(errorMessage);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const openDetails = (request: ApiKeyRequest) => {\n    setSelectedRequest(request);\n    setShowDetailsModal(true);\n  };\n\n  const openApprovalModal = (request: ApiKeyRequest) => {\n    setSelectedRequest(request);\n    setShowApprovalModal(true);\n  };\n\n  const openRejectionModal = (request: ApiKeyRequest) => {\n    setSelectedRequest(request);\n    setShowRejectionModal(true);\n  };\n\n  const toggleRow = (requestId: string) => {\n    setExpandedRow(expandedRow === requestId ? null : requestId);\n  };\n\n  const toggleApiKeyVisibility = (requestId: string) => {\n    setShowApiKey(prev => ({\n      ...prev,\n      [requestId]: !prev[requestId]\n    }));\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    toast.success('Copiado para a √°rea de transfer√™ncia');\n  };\n\n  const formatDate = (date: string) => {\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    }).format(new Date(date));\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'PENDING':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-900/50 text-yellow-400\">\n            <Clock className=\"w-3 h-3 mr-1\" />\n            Pendente\n          </span>\n        );\n      case 'APPROVED':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-900/50 text-green-400\">\n            <CheckCircle className=\"w-3 h-3 mr-1\" />\n            Aprovado\n          </span>\n        );\n      case 'REJECTED':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-900/50 text-red-400\">\n            <XCircle className=\"w-3 h-3 mr-1\" />\n            Rejeitado\n          </span>\n        );\n      case 'REVOKED':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-700 text-gray-400\">\n            <XCircle className=\"w-3 h-3 mr-1\" />\n            Revogado\n          </span>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const getUsageTypeBadge = (type: string) => {\n    if (type === 'SINGLE_CPF') {\n      return (\n        <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-900/50 text-blue-400\">\n          <User className=\"w-3 h-3 mr-1\" />\n          CPF √önico\n        </span>\n      );\n    }\n    return (\n      <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-purple-900/50 text-purple-400\">\n        <CreditCard className=\"w-3 h-3 mr-1\" />\n        M√∫ltiplos CPFs\n      </span>\n    );\n  };\n\n  // Filter requests\n  const filteredRequests = requests.filter(request => {\n    const matchesStatus = filterStatus === 'all' || request.status === filterStatus.toUpperCase();\n    const matchesSearch = searchTerm === '' || \n      request.user?.username?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      request.user?.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      request.serviceUrl.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      request.usageReason.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    return matchesStatus && matchesSearch;\n  });\n\n  const pendingCount = requests.filter(r => r.status === 'PENDING').length;\n  const approvedCount = requests.filter(r => r.status === 'APPROVED').length;\n  const rejectedCount = requests.filter(r => r.status === 'REJECTED').length;\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\" />\n          <p className=\"text-gray-400\">Carregando solicita√ß√µes de API...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <Toaster position=\"top-right\" />\n      \n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-white flex items-center\">\n              <Key className=\"mr-3\" />\n              Solicita√ß√µes de API Key\n            </h1>\n            <p className=\"text-gray-400 mt-2\">\n              Gerencie as solicita√ß√µes de acesso √† API do sistema\n            </p>\n          </div>\n          <button\n            onClick={() => loadRequests(true)}\n            disabled={refreshing}\n            className=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition duration-200 flex items-center space-x-2\"\n          >\n            <RefreshCw className={`w-5 h-5 ${refreshing ? 'animate-spin' : ''}`} />\n            <span>Atualizar</span>\n          </button>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Total</p>\n                <p className=\"text-2xl font-bold text-white\">{requests.length}</p>\n              </div>\n              <FileText className=\"w-8 h-8 text-blue-400\" />\n            </div>\n          </div>\n          \n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Pendentes</p>\n                <p className=\"text-2xl font-bold text-yellow-400\">{pendingCount}</p>\n              </div>\n              <Clock className=\"w-8 h-8 text-yellow-400\" />\n            </div>\n          </div>\n          \n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Aprovadas</p>\n                <p className=\"text-2xl font-bold text-green-400\">{approvedCount}</p>\n              </div>\n              <CheckCircle className=\"w-8 h-8 text-green-400\" />\n            </div>\n          </div>\n          \n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Rejeitadas</p>\n                <p className=\"text-2xl font-bold text-red-400\">{rejectedCount}</p>\n              </div>\n              <XCircle className=\"w-8 h-8 text-red-400\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4 mb-4\">\n          <div className=\"flex flex-col md:flex-row gap-4\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Buscar por usu√°rio, email, URL ou motivo...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-10 pr-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => setFilterStatus('all')}\n                className={`px-4 py-2 rounded-lg transition duration-200 ${\n                  filterStatus === 'all' \n                    ? 'bg-blue-600 text-white' \n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                Todas ({requests.length})\n              </button>\n              <button\n                onClick={() => setFilterStatus('pending')}\n                className={`px-4 py-2 rounded-lg transition duration-200 ${\n                  filterStatus === 'pending' \n                    ? 'bg-yellow-600 text-white' \n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                Pendentes ({pendingCount})\n              </button>\n              <button\n                onClick={() => setFilterStatus('approved')}\n                className={`px-4 py-2 rounded-lg transition duration-200 ${\n                  filterStatus === 'approved' \n                    ? 'bg-green-600 text-white' \n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                Aprovadas ({approvedCount})\n              </button>\n              <button\n                onClick={() => setFilterStatus('rejected')}\n                className={`px-4 py-2 rounded-lg transition duration-200 ${\n                  filterStatus === 'rejected' \n                    ? 'bg-red-600 text-white' \n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                Rejeitadas ({rejectedCount})\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Pending Alert */}\n        {pendingCount > 0 && (\n          <div className=\"bg-yellow-900/20 border border-yellow-700 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-start\">\n              <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5 mr-3\" />\n              <div>\n                <h3 className=\"text-yellow-400 font-semibold\">Aten√ß√£o Necess√°ria</h3>\n                <p className=\"text-gray-300 text-sm mt-1\">\n                  Voc√™ tem {pendingCount} solicita√ß√£o{pendingCount > 1 ? '√µes' : ''} pendente{pendingCount > 1 ? 's' : ''} aguardando an√°lise.\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Requests List */}\n      <div className=\"space-y-4\">\n        {filteredRequests.length === 0 ? (\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-12\">\n            <div className=\"text-center\">\n              <Key className=\"w-12 h-12 text-gray-600 mx-auto mb-4\" />\n              <p className=\"text-gray-400 text-lg\">Nenhuma solicita√ß√£o encontrada</p>\n              <p className=\"text-gray-500 text-sm mt-2\">\n                {searchTerm ? 'Tente ajustar seus filtros de busca' : 'As solicita√ß√µes aparecer√£o aqui quando forem criadas'}\n              </p>\n            </div>\n          </div>\n        ) : (\n          filteredRequests.map((request) => (\n            <div key={request.id} className=\"bg-gray-800 border border-gray-700 rounded-lg overflow-hidden\">\n              {/* Main Row */}\n              <div className=\"p-6\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"w-12 h-12 bg-gray-700 rounded-full flex items-center justify-center flex-shrink-0\">\n                      <User className=\"w-6 h-6 text-gray-400\" />\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-3 mb-2\">\n                        <h3 className=\"font-semibold text-white text-lg\">\n                          {request.user?.username || 'Usu√°rio'}\n                        </h3>\n                        {getStatusBadge(request.status)}\n                        {getUsageTypeBadge(request.usageType)}\n                      </div>\n                      <p className=\"text-sm text-gray-400 mb-2\">{request.user?.email || '-'}</p>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-3\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Globe className=\"w-4 h-4 text-gray-500\" />\n                          <span className=\"text-sm text-gray-300\">{request.serviceUrl}</span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Activity className=\"w-4 h-4 text-gray-500\" />\n                          <span className=\"text-sm text-gray-300\">{request.estimatedVolume}</span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Calendar className=\"w-4 h-4 text-gray-500\" />\n                          <span className=\"text-sm text-gray-300\">{formatDate(request.createdAt)}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    {request.status === 'PENDING' && (\n                      <>\n                        <button\n                          onClick={() => openApprovalModal(request)}\n                          className=\"p-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition duration-200\"\n                          title=\"Aprovar\"\n                        >\n                          <Check className=\"w-4 h-4\" />\n                        </button>\n                        <button\n                          onClick={() => openRejectionModal(request)}\n                          className=\"p-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition duration-200\"\n                          title=\"Rejeitar\"\n                        >\n                          <X className=\"w-4 h-4\" />\n                        </button>\n                      </>\n                    )}\n                    <button\n                      onClick={() => toggleRow(request.id)}\n                      className=\"p-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition duration-200\"\n                      title=\"Ver detalhes\"\n                    >\n                      {expandedRow === request.id ? <ChevronUp className=\"w-4 h-4\" /> : <ChevronDown className=\"w-4 h-4\" />}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {/* Expanded Details */}\n              {expandedRow === request.id && (\n                <div className=\"border-t border-gray-700 p-6 bg-gray-900/50\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-400 mb-2\">Motivo da Solicita√ß√£o</h4>\n                      <p className=\"text-gray-300 bg-gray-800 p-3 rounded\">{request.usageReason}</p>\n                    </div>\n                    \n                    {request.approvalNotes && (\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-400 mb-2\">\n                          {request.status === 'REJECTED' ? 'Motivo da Rejei√ß√£o' : 'Observa√ß√µes'}\n                        </h4>\n                        <p className=\"text-gray-300 bg-gray-800 p-3 rounded\">{request.approvalNotes}</p>\n                      </div>\n                    )}\n                    \n                    {request.generatedApiKey && (\n                      <div className=\"md:col-span-2\">\n                        <h4 className=\"text-sm font-medium text-green-400 mb-2\">Chave API Gerada</h4>\n                        <div className=\"flex items-center space-x-2 bg-green-900/20 border border-green-700 p-3 rounded\">\n                          <code className=\"flex-1 font-mono text-sm text-green-400\">\n                            {showApiKey[request.id] ? request.generatedApiKey : '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢'}\n                          </code>\n                          <button\n                            onClick={() => toggleApiKeyVisibility(request.id)}\n                            className=\"p-2 bg-gray-700 hover:bg-gray-600 text-white rounded transition duration-200\"\n                          >\n                            <Eye className=\"w-4 h-4\" />\n                          </button>\n                          <button\n                            onClick={() => copyToClipboard(request.generatedApiKey!)}\n                            className=\"p-2 bg-gray-700 hover:bg-gray-600 text-white rounded transition duration-200\"\n                          >\n                            <Copy className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <div className=\"mt-4 flex items-center justify-between text-xs text-gray-500\">\n                    <span>ID: {request.id}</span>\n                    <div className=\"flex items-center space-x-4\">\n                      {request.approvedAt && (\n                        <span>Aprovado em: {formatDate(request.approvedAt)}</span>\n                      )}\n                      {request.rejectedAt && (\n                        <span>Rejeitado em: {formatDate(request.rejectedAt)}</span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Approval Modal */}\n      {showApprovalModal && selectedRequest && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 max-w-lg w-full mx-4\">\n            <h2 className=\"text-2xl font-bold text-white mb-6\">Aprovar Solicita√ß√£o</h2>\n            \n            <div className=\"space-y-4\">\n              <div className=\"bg-gray-900 rounded-lg p-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"text-xs text-gray-400\">Usu√°rio</label>\n                    <p className=\"text-white font-medium\">{selectedRequest.user?.username}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-gray-400\">Email</label>\n                    <p className=\"text-white font-medium\">{selectedRequest.user?.email}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-gray-400\">Servi√ßo</label>\n                    <p className=\"text-white font-medium\">{selectedRequest.serviceUrl}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-gray-400\">Tipo de Uso</label>\n                    <p className=\"text-white font-medium\">\n                      {selectedRequest.usageType === 'SINGLE_CPF' ? 'CPF √önico' : 'M√∫ltiplos CPFs'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Observa√ß√µes (opcional)\n                </label>\n                <textarea\n                  value={approvalNotes}\n                  onChange={(e) => setApprovalNotes(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500\"\n                  rows={4}\n                  placeholder=\"Adicione observa√ß√µes sobre a aprova√ß√£o...\"\n                />\n              </div>\n\n              <div className=\"bg-green-900/20 border border-green-700 rounded-lg p-3\">\n                <p className=\"text-sm text-green-400\">\n                  ‚ö° Ao aprovar, uma chave API ser√° gerada automaticamente e enviada ao usu√°rio.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex justify-end space-x-3 mt-6\">\n              <button\n                onClick={() => {\n                  setShowApprovalModal(false);\n                  setApprovalNotes('');\n                }}\n                className=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition duration-200\"\n                disabled={isProcessing}\n              >\n                Cancelar\n              </button>\n              <button\n                onClick={handleApprove}\n                className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition duration-200 flex items-center space-x-2\"\n                disabled={isProcessing}\n              >\n                {isProcessing ? (\n                  <>\n                    <RefreshCw className=\"w-4 h-4 animate-spin\" />\n                    <span>Aprovando...</span>\n                  </>\n                ) : (\n                  <>\n                    <CheckCircle className=\"w-4 h-4\" />\n                    <span>Aprovar e Gerar API Key</span>\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Rejection Modal */}\n      {showRejectionModal && selectedRequest && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 max-w-lg w-full mx-4\">\n            <h2 className=\"text-2xl font-bold text-white mb-6\">Rejeitar Solicita√ß√£o</h2>\n            \n            <div className=\"space-y-4\">\n              <div className=\"bg-gray-900 rounded-lg p-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"text-xs text-gray-400\">Usu√°rio</label>\n                    <p className=\"text-white font-medium\">{selectedRequest.user?.username}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-gray-400\">Email</label>\n                    <p className=\"text-white font-medium\">{selectedRequest.user?.email}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-gray-400\">Servi√ßo</label>\n                    <p className=\"text-white font-medium\">{selectedRequest.serviceUrl}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-gray-400\">Volume</label>\n                    <p className=\"text-white font-medium\">{selectedRequest.estimatedVolume}</p>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Motivo da Rejei√ß√£o <span className=\"text-red-400\">*</span>\n                </label>\n                <textarea\n                  value={rejectionReason}\n                  onChange={(e) => setRejectionReason(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500\"\n                  rows={4}\n                  required\n                  placeholder=\"Explique o motivo da rejei√ß√£o...\"\n                />\n              </div>\n\n              <div className=\"bg-red-900/20 border border-red-700 rounded-lg p-3\">\n                <p className=\"text-sm text-red-400\">\n                  ‚ö†Ô∏è O usu√°rio ser√° notificado sobre a rejei√ß√£o e o motivo informado.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flex justify-end space-x-3 mt-6\">\n              <button\n                onClick={() => {\n                  setShowRejectionModal(false);\n                  setRejectionReason('');\n                }}\n                className=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition duration-200\"\n                disabled={isProcessing}\n              >\n                Cancelar\n              </button>\n              <button\n                onClick={handleReject}\n                className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition duration-200 flex items-center space-x-2\"\n                disabled={isProcessing || !rejectionReason}\n              >\n                {isProcessing ? (\n                  <>\n                    <RefreshCw className=\"w-4 h-4 animate-spin\" />\n                    <span>Rejeitando...</span>\n                  </>\n                ) : (\n                  <>\n                    <XCircle className=\"w-4 h-4\" />\n                    <span>Rejeitar Solicita√ß√£o</span>\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}