{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/lib/services.ts"],"sourcesContent":["import api from './api';\nimport { Transaction, DashboardStats, Balance, PixQRCode } from '@/app/types';\n\nexport const accountValidationService = {\n  async getValidationStatus(): Promise<any> {\n    const response = await api.get('/account-validation/status');\n    return response.data;\n  },\n\n  async createValidationPayment(depixAddress: string): Promise<any> {\n    const response = await api.post('/account-validation/create-payment', { depixAddress });\n    return response.data;\n  },\n\n  async getValidationRequirements(): Promise<any> {\n    const response = await api.get('/account-validation/requirements');\n    return response.data;\n  },\n\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/account-validation/limits');\n    return response.data;\n  },\n};\n\nexport const pixService = {\n  async createDeposit(amount: number, pixKey?: string): Promise<PixQRCode> {\n    const response = await api.post<PixQRCode>('/pix/deposit', { amount, pixKey });\n    return response.data;\n  },\n\n  async generateQRCode(params: {\n    amount: number;\n    depixAddress: string; // Campo obrigat√≥rio\n    description?: string;\n    expirationMinutes?: number;\n  }): Promise<any> {\n    const response = await api.post('/pix/qrcode', params);\n    return response.data;\n  },\n\n  async createWithdraw(amount: number, pixKey: string): Promise<Transaction> {\n    const response = await api.post<Transaction>('/pix/withdraw', { amount, pixKey });\n    return response.data;\n  },\n\n  async getTransactions(params?: { limit?: number; offset?: number }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get<Transaction[]>('/pix/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async getTransaction(id: number): Promise<Transaction> {\n    const response = await api.get<Transaction>(`/pix/transactions/${id}`);\n    return response.data;\n  },\n\n  async getBalance(): Promise<Balance> {\n    const response = await api.get<Balance>('/pix/balance');\n    return response.data;\n  },\n\n  async checkDepositStatus(transactionId: string): Promise<any> {\n    const response = await api.get<any>(`/pix/deposit/${transactionId}/status`);\n    return response.data;\n  },\n};\n\nexport const adminService = {\n  async getDashboardStats(): Promise<DashboardStats> {\n    const response = await api.get<DashboardStats>('/admin/dashboard');\n    return response.data;\n  },\n\n  async getAllTransactions(params?: { \n    limit?: number; \n    offset?: number;\n    status?: string;\n    userId?: number | string;\n    type?: string;\n  }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset,\n      status: params.status,\n      userId: params.userId ? (typeof params.userId === 'string' ? params.userId : params.userId.toString()) : undefined,\n      type: params.type\n    } : undefined;\n    const response = await api.get<Transaction[]>('/admin/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async updateTransactionStatus(\n    transactionId: number, \n    status: 'COMPLETED' | 'FAILED'\n  ): Promise<Transaction> {\n    const response = await api.patch<Transaction>(\n      `/admin/transactions/${transactionId}`,\n      { status }\n    );\n    return response.data;\n  },\n\n  async getUsers(params?: { limit?: number; offset?: number }): Promise<any[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get('/admin/users', { params: apiParams });\n    return response.data;\n  },\n\n  async createUser(data: { username: string; email: string; password: string; role: string }): Promise<any> {\n    const response = await api.post('/admin/users', data);\n    return response.data;\n  },\n\n  async updateUser(userId: string, data: any): Promise<any> {\n    const response = await api.patch(`/admin/users/${userId}`, data);\n    return response.data;\n  },\n\n  async deleteUser(userId: string): Promise<void> {\n    await api.delete(`/admin/users/${userId}`);\n  },\n\n  async generateApiKey(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/generate-api-key`);\n    return response.data;\n  },\n\n  async updateUserMedLimits(userId: string, limits: any): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/med-limits`, limits);\n    return response.data;\n  },\n\n  async adjustUserReputation(userId: string, reputation: any): Promise<any> {\n    const response = await api.put(`/account-validation/user/${userId}/limits`, reputation);\n    return response.data;\n  },\n\n  async getSystemStats(): Promise<any> {\n    const response = await api.get('/admin/stats');\n    return response.data;\n  },\n\n  async getUserStats(userId?: string): Promise<any> {\n    if (userId) {\n      const response = await api.get(`/admin/users/${userId}/stats`);\n      return response.data;\n    }\n    const response = await api.get('/admin/stats/users');\n    return response.data;\n  },\n\n  async getAuditStats(startDate?: Date, endDate?: Date): Promise<any> {\n    const params = {\n      startDate: startDate?.toISOString(),\n      endDate: endDate?.toISOString(),\n    };\n    const response = await api.get('/admin/stats/audit', { params });\n    return response.data;\n  },\n\n  async getAuditLogs(params?: {\n    skip?: number;\n    take?: number;\n    userId?: string;\n    action?: string;\n    resource?: string;\n    startDate?: Date;\n    endDate?: Date;\n  }): Promise<any[]> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      userId: params.userId,\n      action: params.action,\n      resource: params.resource,\n      startDate: params.startDate?.toISOString(),\n      endDate: params.endDate?.toISOString(),\n    } : undefined;\n    const response = await api.get('/admin/audit-logs', { params: apiParams });\n    return response.data;\n  },\n\n  // User Limits Management (MED Compliance)\n  async getAllUsersWithLimits(params?: {\n    skip?: number;\n    take?: number;\n    isFirstDay?: boolean;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n  }): Promise<any> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      isFirstDay: params.isFirstDay,\n      isKycVerified: params.isKycVerified,\n      isHighRiskUser: params.isHighRiskUser,\n    } : undefined;\n    const response = await api.get('/admin/users/limits', { params: apiParams });\n    return response.data;\n  },\n\n  async getUserLimits(userId: string): Promise<any> {\n    const response = await api.get(`/admin/users/${userId}/limits`);\n    return response.data;\n  },\n\n  async updateUserLimits(userId: string, limits: {\n    dailyDepositLimit?: number;\n    dailyWithdrawLimit?: number;\n    dailyTransferLimit?: number;\n    maxDepositPerTx?: number;\n    maxWithdrawPerTx?: number;\n    maxTransferPerTx?: number;\n    monthlyDepositLimit?: number;\n    monthlyWithdrawLimit?: number;\n    monthlyTransferLimit?: number;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n    notes?: string;\n  }): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/limits`, limits);\n    return response.data;\n  },\n\n  async resetUserFirstDay(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/reset-first-day`);\n    return response.data;\n  },\n\n  async applyKycLimits(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/apply-kyc-limits`);\n    return response.data;\n  },\n};\n\nexport const userService = {\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/pix/limits');\n    return response.data;\n  },\n};\n\nexport const apiKeyService = {\n  async getApiKeyStatus(): Promise<{ hasApiKey: boolean; createdAt?: string }> {\n    const response = await api.get('/auth/apitoken');\n    return response.data;\n  },\n\n  async generateApiKey(data: { name?: string; expirationDays?: number }): Promise<any> {\n    const response = await api.post('/auth/apitoken', data);\n    return response.data;\n  },\n\n  async revokeApiKey(): Promise<void> {\n    await api.delete('/auth/apitoken');\n  },\n};\n\nexport const apiKeyRequestService = {\n  async getMyRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-requests');\n    return response.data;\n  },\n\n  async getMyApiKeys(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-api-keys');\n    return response.data;\n  },\n\n  async createRequest(data: {\n    usageReason: string;\n    serviceUrl: string;\n    estimatedVolume: string;\n    usageType: 'SINGLE_CPF' | 'MULTIPLE_CPF';\n  }): Promise<any> {\n    const response = await api.post('/api-key-requests', data);\n    return response.data;\n  },\n\n  async getPendingRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests');\n    return response.data;\n  },\n\n  async approveRequest(requestId: string, data?: { approvalNotes?: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/approve`, data || {});\n    return response.data;\n  },\n\n  async rejectRequest(requestId: string, data: { approvalNotes: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/reject`, data);\n    return response.data;\n  },\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/lib/translations.ts"],"sourcesContent":["// Tradu√ß√µes para status de transa√ß√µes\nexport const transactionStatusTranslations: Record<string, string> = {\n  // Transaction Status\n  'PENDING': 'Pendente',\n  'PROCESSING': 'Processando',\n  'COMPLETED': 'Conclu√≠do',\n  'FAILED': 'Falhou',\n  'CANCELLED': 'Cancelado',\n  'EXPIRED': 'Expirado',\n  \n  // API Key Request Status\n  'APPROVED': 'Aprovado',\n  'REJECTED': 'Rejeitado',\n  'REVOKED': 'Revogado',\n  \n  // Additional statuses that might appear\n  'SUCCESS': 'Sucesso',\n  'ERROR': 'Erro',\n  'ACTIVE': 'Ativo',\n  'INACTIVE': 'Inativo',\n  'WAITING': 'Aguardando',\n  'CONFIRMED': 'Confirmado',\n  'REFUNDED': 'Reembolsado',\n};\n\n// Fun√ß√£o helper para traduzir status\nexport function translateStatus(status: string | undefined | null): string {\n  if (!status) return '-';\n  return transactionStatusTranslations[status.toUpperCase()] || status;\n}\n\n// Cores para cada status\nexport const statusColors: Record<string, string> = {\n  'PENDING': 'bg-yellow-100 text-yellow-800',\n  'PROCESSING': 'bg-blue-100 text-blue-800',\n  'COMPLETED': 'bg-green-100 text-green-800',\n  'FAILED': 'bg-red-100 text-red-800',\n  'CANCELLED': 'bg-gray-100 text-gray-800',\n  'EXPIRED': 'bg-orange-100 text-orange-800',\n  'APPROVED': 'bg-green-100 text-green-800',\n  'REJECTED': 'bg-red-100 text-red-800',\n  'REVOKED': 'bg-purple-100 text-purple-800',\n  'SUCCESS': 'bg-green-100 text-green-800',\n  'ERROR': 'bg-red-100 text-red-800',\n  'ACTIVE': 'bg-green-100 text-green-800',\n  'INACTIVE': 'bg-gray-100 text-gray-800',\n  'WAITING': 'bg-yellow-100 text-yellow-800',\n  'CONFIRMED': 'bg-green-100 text-green-800',\n  'REFUNDED': 'bg-indigo-100 text-indigo-800',\n};\n\n// Fun√ß√£o helper para obter a cor do status\nexport function getStatusColor(status: string | undefined | null): string {\n  if (!status) return 'bg-gray-100 text-gray-800';\n  return statusColors[status.toUpperCase()] || 'bg-gray-100 text-gray-800';\n}\n\n// √çcones para cada status (opcional, se quiser usar)\nexport const statusIcons: Record<string, string> = {\n  'PENDING': '‚è≥',\n  'PROCESSING': '‚öôÔ∏è',\n  'COMPLETED': '‚úÖ',\n  'FAILED': '‚ùå',\n  'CANCELLED': 'üö´',\n  'EXPIRED': '‚è∞',\n  'APPROVED': '‚úÖ',\n  'REJECTED': '‚ùå',\n  'REVOKED': 'üîí',\n  'SUCCESS': '‚úÖ',\n  'ERROR': '‚ùå',\n  'ACTIVE': 'üü¢',\n  'INACTIVE': '‚ö´',\n  'WAITING': '‚è≥',\n  'CONFIRMED': '‚úîÔ∏è',\n  'REFUNDED': 'üí∞',\n};\n\n// Fun√ß√£o helper para obter o √≠cone do status\nexport function getStatusIcon(status: string | undefined | null): string {\n  if (!status) return '';\n  return statusIcons[status.toUpperCase()] || '';\n}"],"names":[],"mappings":"AAAA,sCAAsC;;;;;;;;;AAC/B,MAAM,gCAAwD;IACnE,qBAAqB;IACrB,WAAW;IACX,cAAc;IACd,aAAa;IACb,UAAU;IACV,aAAa;IACb,WAAW;IAEX,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,WAAW;IAEX,wCAAwC;IACxC,WAAW;IACX,SAAS;IACT,UAAU;IACV,YAAY;IACZ,WAAW;IACX,aAAa;IACb,YAAY;AACd;AAGO,SAAS,gBAAgB,MAAiC;IAC/D,IAAI,CAAC,QAAQ,OAAO;IACpB,OAAO,6BAA6B,CAAC,OAAO,WAAW,GAAG,IAAI;AAChE;AAGO,MAAM,eAAuC;IAClD,WAAW;IACX,cAAc;IACd,aAAa;IACb,UAAU;IACV,aAAa;IACb,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,WAAW;IACX,SAAS;IACT,UAAU;IACV,YAAY;IACZ,WAAW;IACX,aAAa;IACb,YAAY;AACd;AAGO,SAAS,eAAe,MAAiC;IAC9D,IAAI,CAAC,QAAQ,OAAO;IACpB,OAAO,YAAY,CAAC,OAAO,WAAW,GAAG,IAAI;AAC/C;AAGO,MAAM,cAAsC;IACjD,WAAW;IACX,cAAc;IACd,aAAa;IACb,UAAU;IACV,aAAa;IACb,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,WAAW;IACX,WAAW;IACX,SAAS;IACT,UAAU;IACV,YAAY;IACZ,WAAW;IACX,aAAa;IACb,YAAY;AACd;AAGO,SAAS,cAAc,MAAiC;IAC7D,IAAI,CAAC,QAAQ,OAAO;IACpB,OAAO,WAAW,CAAC,OAAO,WAAW,GAAG,IAAI;AAC9C","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/%28dashboard%29/admin/transactions/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { adminService } from '@/app/lib/services';\nimport { Transaction } from '@/app/types';\nimport {\n  Search,\n  Filter,\n  Download,\n  Calendar,\n  DollarSign,\n  Activity,\n  ArrowUpRight,\n  ArrowDownLeft,\n  Clock,\n  CheckCircle,\n  XCircle,\n  AlertCircle,\n  Eye,\n  X,\n  Copy,\n} from 'lucide-react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { translateStatus } from '@/app/lib/translations';\n\nexport default function AdminTransactionsPage() {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    status: '',\n    type: '',\n    userId: '',\n    startDate: '',\n    endDate: '',\n    search: '',\n  });\n  const [stats, setStats] = useState({\n    total: 0,\n    completed: 0,\n    pending: 0,\n    failed: 0,\n    totalVolume: 0,\n  });\n\n  useEffect(() => {\n    loadTransactions();\n  }, [filters]);\n\n  const loadTransactions = async () => {\n    setLoading(true);\n    try {\n      const data = await adminService.getAllTransactions({\n        status: filters.status || undefined,\n        type: filters.type || undefined,\n        userId: filters.userId || undefined,\n      });\n      setTransactions(data);\n      calculateStats(data);\n    } catch (error) {\n      console.error('Error loading transactions:', error);\n      toast.error('Erro ao carregar transa√ß√µes');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateStats = (data: Transaction[]) => {\n    const stats = data.reduce(\n      (acc, t) => {\n        acc.total++;\n        if (t.status === 'COMPLETED') {\n          acc.completed++;\n          acc.totalVolume += t.amount;\n        } else if (t.status === 'PENDING') {\n          acc.pending++;\n        } else if (t.status === 'FAILED') {\n          acc.failed++;\n        }\n        return acc;\n      },\n      { total: 0, completed: 0, pending: 0, failed: 0, totalVolume: 0 }\n    );\n    setStats(stats);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedTransaction(null);\n  };\n\n  const copyToClipboard = async (text: string, label: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      toast.success(`${label} copiado!`);\n    } catch (error) {\n      toast.error('Erro ao copiar');\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(amount);\n  };\n\n  const formatDate = (date: string) => {\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    }).format(new Date(date));\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'COMPLETED':\n        return <CheckCircle className=\"w-4 h-4 text-green-400\" />;\n      case 'PENDING':\n        return <Clock className=\"w-4 h-4 text-yellow-400\" />;\n      case 'PROCESSING':\n        return <Activity className=\"w-4 h-4 text-blue-400\" />;\n      case 'FAILED':\n        return <XCircle className=\"w-4 h-4 text-red-400\" />;\n      case 'EXPIRED':\n        return <Clock className=\"w-4 h-4 text-orange-400\" />;\n      case 'CANCELLED':\n        return <XCircle className=\"w-4 h-4 text-gray-400\" />;\n      default:\n        return <AlertCircle className=\"w-4 h-4 text-gray-400\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'COMPLETED':\n        return 'text-green-400 bg-green-900/50';\n      case 'PENDING':\n        return 'text-yellow-400 bg-yellow-900/50';\n      case 'PROCESSING':\n        return 'text-blue-400 bg-blue-900/50';\n      case 'FAILED':\n        return 'text-red-400 bg-red-900/50';\n      case 'EXPIRED':\n        return 'text-orange-400 bg-orange-900/50';\n      case 'CANCELLED':\n        return 'text-gray-400 bg-gray-700';\n      default:\n        return 'text-gray-400 bg-gray-700';\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'DEPOSIT':\n        return <ArrowDownLeft className=\"w-4 h-4\" />;\n      case 'WITHDRAW':\n        return <ArrowUpRight className=\"w-4 h-4\" />;\n      default:\n        return <Activity className=\"w-4 h-4\" />;\n    }\n  };\n\n  const exportToCSV = () => {\n    const headers = ['ID', 'Tipo', 'Status', 'Valor', 'Usu√°rio', 'Data'];\n    const rows = transactions.map((t) => [\n      t.id,\n      t.type,\n      t.status,\n      formatCurrency(t.amount),\n      t.userId,\n      formatDate(t.createdAt),\n    ]);\n\n    const csvContent = [headers, ...rows]\n      .map((row) => row.join(','))\n      .join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `transactions_${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    toast.success('Transa√ß√µes exportadas com sucesso!');\n  };\n\n  return (\n    <>\n      <Toaster position=\"top-right\" />\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-white\">\n              Todas as Transa√ß√µes\n            </h1>\n            <p className=\"text-gray-400 mt-2\">\n              Gerencie todas as transa√ß√µes do sistema\n            </p>\n          </div>\n          <button\n            onClick={exportToCSV}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <Download className=\"w-5 h-5\" />\n            Exportar CSV\n          </button>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n          <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Total</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {stats.total}\n                </p>\n              </div>\n              <Activity className=\"w-8 h-8 text-purple-400\" />\n            </div>\n          </div>\n\n          <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Conclu√≠das</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {stats.completed}\n                </p>\n              </div>\n              <CheckCircle className=\"w-8 h-8 text-green-400\" />\n            </div>\n          </div>\n\n          <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Pendentes</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {stats.pending}\n                </p>\n              </div>\n              <Clock className=\"w-8 h-8 text-yellow-400\" />\n            </div>\n          </div>\n\n          <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Falhadas</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {stats.failed}\n                </p>\n              </div>\n              <XCircle className=\"w-8 h-8 text-red-400\" />\n            </div>\n          </div>\n\n          <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-400\">Volume Total</p>\n                <p className=\"text-xl font-bold text-white\">\n                  {formatCurrency(stats.totalVolume)}\n                </p>\n              </div>\n              <DollarSign className=\"w-8 h-8 text-green-400\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <div className=\"bg-gray-800 p-4 rounded-lg border border-gray-700\">\n          <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Buscar\n              </label>\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"ID ou usu√°rio...\"\n                  className=\"w-full pl-10 pr-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500 placeholder-gray-400\"\n                  value={filters.search}\n                  onChange={(e) =>\n                    setFilters({ ...filters, search: e.target.value })\n                  }\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Status\n              </label>\n              <select\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500\"\n                value={filters.status}\n                onChange={(e) =>\n                  setFilters({ ...filters, status: e.target.value })\n                }\n              >\n                <option value=\"\">Todos</option>\n                <option value=\"COMPLETED\">Conclu√≠da</option>\n                <option value=\"PENDING\">Pendente</option>\n                <option value=\"PROCESSING\">Processando</option>\n                <option value=\"FAILED\">Falhou</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Tipo\n              </label>\n              <select\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500\"\n                value={filters.type}\n                onChange={(e) =>\n                  setFilters({ ...filters, type: e.target.value })\n                }\n              >\n                <option value=\"\">Todos</option>\n                <option value=\"DEPOSIT\">Dep√≥sito</option>\n                <option value=\"WITHDRAW\">Saque</option>\n                <option value=\"TRANSFER\">Transfer√™ncia</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Data Inicial\n              </label>\n              <input\n                type=\"date\"\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500\"\n                value={filters.startDate}\n                onChange={(e) =>\n                  setFilters({ ...filters, startDate: e.target.value })\n                }\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Data Final\n              </label>\n              <input\n                type=\"date\"\n                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500\"\n                value={filters.endDate}\n                onChange={(e) =>\n                  setFilters({ ...filters, endDate: e.target.value })\n                }\n              />\n            </div>\n\n            <div className=\"flex items-end\">\n              <button\n                onClick={() =>\n                  setFilters({\n                    status: '',\n                    type: '',\n                    userId: '',\n                    startDate: '',\n                    endDate: '',\n                    search: '',\n                  })\n                }\n                className=\"w-full px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-500 transition-colors\"\n              >\n                Limpar Filtros\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Transactions Table */}\n        <div className=\"bg-gray-800 rounded-lg shadow-lg border border-gray-700 overflow-hidden\">\n          {loading ? (\n            <div className=\"flex items-center justify-center h-64\">\n              <div className=\"w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n            </div>\n          ) : transactions.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <Activity className=\"w-12 h-12 text-gray-500 mx-auto mb-4\" />\n              <p className=\"text-gray-400\">Nenhuma transa√ß√£o encontrada</p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-700\">\n                  <tr>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      ID\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Tipo\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Status\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Valor\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Usu√°rio\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      Data\n                    </th>\n                    <th className=\"text-left py-3 px-4 text-sm font-semibold text-gray-300\">\n                      A√ß√µes\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-700\">\n                  {transactions.map((transaction) => (\n                    <tr\n                      key={transaction.id}\n                      className=\"hover:bg-gray-700/50 transition-colors\"\n                    >\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-xs font-mono text-gray-400\">\n                          {transaction.id.slice(0, 8)}...\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center gap-2\">\n                          {getTypeIcon(transaction.type)}\n                          <span className=\"text-sm text-gray-200\">\n                            {transaction.type === 'DEPOSIT'\n                              ? 'Dep√≥sito'\n                              : transaction.type === 'WITHDRAW'\n                              ? 'Saque'\n                              : 'Transfer√™ncia'}\n                          </span>\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex items-center gap-2\">\n                          {getStatusIcon(transaction.status)}\n                          <span\n                            className={`text-xs font-semibold px-2 py-1 rounded-full ${getStatusColor(\n                              transaction.status\n                            )}`}\n                          >\n                            {translateStatus(transaction.status)}\n                          </span>\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-sm font-semibold text-white\">\n                          {formatCurrency(transaction.amount)}\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-sm text-gray-300\">\n                          {transaction.userId.slice(0, 8)}...\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <span className=\"text-sm text-gray-400\">\n                          {formatDate(transaction.createdAt)}\n                        </span>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <button \n                          onClick={() => {\n                            setSelectedTransaction(transaction);\n                            setShowModal(true);\n                          }}\n                          className=\"text-blue-400 hover:text-blue-300 text-sm flex items-center gap-1\"\n                        >\n                          <Eye className=\"w-4 h-4\" />\n                          Ver detalhes\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        {/* Transaction Details Modal */}\n        {showModal && selectedTransaction && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-gray-800 border border-gray-700 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"flex items-center justify-between p-6 border-b border-gray-700\">\n                <h2 className=\"text-xl font-bold text-white flex items-center\">\n                  {getTypeIcon(selectedTransaction.type)}\n                  <span className=\"ml-2\">Detalhes da Transa√ß√£o</span>\n                </h2>\n                <button\n                  onClick={handleCloseModal}\n                  className=\"text-gray-400 hover:text-white transition-colors\"\n                >\n                  <X className=\"w-6 h-6\" />\n                </button>\n              </div>\n\n              <div className=\"p-6 space-y-6\">\n                {/* Transaction Overview */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">ID da Transa√ß√£o</h3>\n                    <div className=\"flex items-center justify-between bg-gray-700 p-3 rounded-lg\">\n                      <code className=\"text-sm font-mono text-white\">{selectedTransaction.id}</code>\n                      <button\n                        onClick={() => copyToClipboard(selectedTransaction.id, 'ID da transa√ß√£o')}\n                        className=\"text-blue-400 hover:text-blue-300 transition-colors\"\n                      >\n                        <Copy className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Usu√°rio</h3>\n                    <div className=\"flex items-center justify-between bg-gray-700 p-3 rounded-lg\">\n                      <code className=\"text-sm font-mono text-white\">{selectedTransaction.userId}</code>\n                      <button\n                        onClick={() => copyToClipboard(selectedTransaction.userId, 'ID do usu√°rio')}\n                        className=\"text-blue-400 hover:text-blue-300 transition-colors\"\n                      >\n                        <Copy className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Status and Type */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Tipo</h3>\n                    <div className=\"flex items-center\">\n                      {getTypeIcon(selectedTransaction.type)}\n                      <span className=\"ml-2 text-lg font-medium text-white\">\n                        {selectedTransaction.type === 'DEPOSIT' ? 'Dep√≥sito' :\n                         selectedTransaction.type === 'WITHDRAW' ? 'Saque' : 'Transfer√™ncia'}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Status</h3>\n                    <div className=\"flex items-center\">\n                      {getStatusIcon(selectedTransaction.status)}\n                      <span className={`ml-2 text-sm font-semibold px-2 py-1 rounded-full ${getStatusColor(selectedTransaction.status)}`}>\n                        {translateStatus(selectedTransaction.status)}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Valor</h3>\n                    <div className=\"text-2xl font-bold text-white\">\n                      {formatCurrency(selectedTransaction.amount)}\n                    </div>\n                  </div>\n                </div>\n\n                {/* PIX Information */}\n                {selectedTransaction.pixKey && (\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">\n                      {selectedTransaction.type === 'DEPOSIT' ? 'üîπ Endere√ßo DePix de Destino' : 'Chave PIX'}\n                    </h3>\n                    <div className=\"flex items-center justify-between bg-gradient-to-r from-green-900/30 to-green-800/20 border border-green-600 p-3 rounded-lg\">\n                      <code className=\"text-sm font-mono text-green-400 break-all\">{selectedTransaction.pixKey}</code>\n                      <button\n                        onClick={() => copyToClipboard(selectedTransaction.pixKey!, 'Chave PIX')}\n                        className=\"text-blue-400 hover:text-blue-300 transition-colors ml-2 flex-shrink-0\"\n                      >\n                        <Copy className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {/* External ID */}\n                {selectedTransaction.externalId && (\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">ID Externo (Eulen)</h3>\n                    <div className=\"flex items-center justify-between bg-gray-700 p-3 rounded-lg\">\n                      <code className=\"text-sm font-mono text-yellow-400\">{selectedTransaction.externalId}</code>\n                      <button\n                        onClick={() => copyToClipboard(selectedTransaction.externalId!, 'ID externo')}\n                        className=\"text-blue-400 hover:text-blue-300 transition-colors\"\n                      >\n                        <Copy className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                {/* Description */}\n                {selectedTransaction.description && (\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Descri√ß√£o</h3>\n                    <p className=\"text-white bg-gray-700 p-3 rounded-lg\">{selectedTransaction.description}</p>\n                  </div>\n                )}\n\n                {/* Timestamps */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Data de Cria√ß√£o</h3>\n                    <p className=\"text-white\">{formatDate(selectedTransaction.createdAt)}</p>\n                  </div>\n\n                  {selectedTransaction.processedAt && (\n                    <div>\n                      <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Data de Processamento</h3>\n                      <p className=\"text-white\">{formatDate(selectedTransaction.processedAt)}</p>\n                    </div>\n                  )}\n                </div>\n\n                {/* Metadata */}\n                {selectedTransaction.metadata && (() => {\n                  try {\n                    const metadata = JSON.parse(selectedTransaction.metadata);\n                    const eulenResponse = metadata.eulenResponse || metadata;\n                    \n                    return (\n                      <>\n                        {/* Eulen API Details */}\n                        {eulenResponse && (\n                          <div>\n                            <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Detalhes da API Eulen</h3>\n                            <div className=\"bg-gray-700 p-4 rounded-lg space-y-3\">\n                              {eulenResponse.qrCode && (\n                                <div>\n                                  <h4 className=\"text-xs font-medium text-gray-400 mb-1\">QR Code PIX</h4>\n                                  <div className=\"flex items-center justify-between\">\n                                    <code className=\"text-xs font-mono text-blue-400 break-all\">\n                                      {eulenResponse.qrCode.substring(0, 50)}...\n                                    </code>\n                                    <button\n                                      onClick={() => copyToClipboard(eulenResponse.qrCode, 'QR Code')}\n                                      className=\"text-blue-400 hover:text-blue-300 transition-colors ml-2\"\n                                    >\n                                      <Copy className=\"w-3 h-3\" />\n                                    </button>\n                                  </div>\n                                </div>\n                              )}\n\n                              {eulenResponse.qrCodeImage && (\n                                <div>\n                                  <h4 className=\"text-xs font-medium text-gray-400 mb-1\">URL da Imagem QR</h4>\n                                  <a\n                                    href={eulenResponse.qrCodeImage}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                    className=\"text-xs font-mono text-cyan-400 hover:text-cyan-300 break-all\"\n                                  >\n                                    {eulenResponse.qrCodeImage}\n                                  </a>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n\n                        {/* Raw Metadata */}\n                        <details className=\"group\">\n                          <summary className=\"text-sm font-medium text-gray-400 mb-2 cursor-pointer hover:text-gray-300 transition-colors\">\n                            üìã Metadados Brutos (clique para expandir)\n                          </summary>\n                          <pre className=\"text-xs text-gray-300 bg-gray-900 p-3 rounded-lg overflow-x-auto mt-2 border border-gray-600\">\n                            {JSON.stringify(metadata, null, 2)}\n                          </pre>\n                        </details>\n                      </>\n                    );\n                  } catch (error) {\n                    return (\n                      <div>\n                        <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Metadados</h3>\n                        <pre className=\"text-sm text-white bg-gray-700 p-3 rounded-lg overflow-x-auto\">\n                          {selectedTransaction.metadata}\n                        </pre>\n                      </div>\n                    );\n                  }\n                })()}\n\n                {/* Error Message */}\n                {selectedTransaction.errorMessage && (\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-400 mb-2\">Mensagem de Erro</h3>\n                    <p className=\"text-red-400 bg-red-900/20 border border-red-600 p-3 rounded-lg\">\n                      {selectedTransaction.errorMessage}\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"flex justify-end p-6 border-t border-gray-700\">\n                <button\n                  onClick={handleCloseModal}\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition duration-200\"\n                >\n                  Fechar\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}