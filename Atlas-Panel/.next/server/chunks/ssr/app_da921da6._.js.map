{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/lib/services.ts"],"sourcesContent":["import api from './api';\nimport { Transaction, DashboardStats, Balance, PixQRCode } from '@/app/types';\n\nexport const accountValidationService = {\n  async getValidationStatus(): Promise<any> {\n    const response = await api.get('/account-validation/status');\n    return response.data;\n  },\n\n  async createValidationPayment(depixAddress: string): Promise<any> {\n    const response = await api.post('/account-validation/create-payment', { depixAddress });\n    return response.data;\n  },\n\n  async getValidationRequirements(): Promise<any> {\n    const response = await api.get('/account-validation/requirements');\n    return response.data;\n  },\n\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/account-validation/limits');\n    return response.data;\n  },\n\n  async manualValidationCheck(): Promise<any> {\n    const response = await api.post('/account-validation/manual-check');\n    return response.data;\n  },\n};\n\nexport const pixService = {\n  async createDeposit(amount: number, pixKey?: string): Promise<PixQRCode> {\n    const response = await api.post<PixQRCode>('/pix/deposit', { amount, pixKey });\n    return response.data;\n  },\n\n  async generateQRCode(params: {\n    amount: number;\n    depixAddress: string; // Campo obrigat√≥rio\n    description?: string;\n    expirationMinutes?: number;\n  }): Promise<any> {\n    const response = await api.post('/pix/qrcode', params);\n    return response.data;\n  },\n\n  async createWithdraw(amount: number, pixKey: string): Promise<Transaction> {\n    const response = await api.post<Transaction>('/pix/withdraw', { amount, pixKey });\n    return response.data;\n  },\n\n  async getTransactions(params?: { limit?: number; offset?: number }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get<Transaction[]>('/pix/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async getTransaction(id: number): Promise<Transaction> {\n    const response = await api.get<Transaction>(`/pix/transactions/${id}`);\n    return response.data;\n  },\n\n  async getBalance(): Promise<Balance> {\n    const response = await api.get<Balance>('/pix/balance');\n    return response.data;\n  },\n\n  async checkDepositStatus(transactionId: string): Promise<any> {\n    const response = await api.get<any>(`/pix/deposit/${transactionId}/status`);\n    return response.data;\n  },\n};\n\nexport const adminService = {\n  async getDashboardStats(): Promise<DashboardStats> {\n    const response = await api.get<DashboardStats>('/admin/dashboard');\n    return response.data;\n  },\n\n  async getAllTransactions(params?: { \n    limit?: number; \n    offset?: number;\n    status?: string;\n    userId?: number | string;\n    type?: string;\n  }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset,\n      status: params.status,\n      userId: params.userId ? (typeof params.userId === 'string' ? params.userId : params.userId.toString()) : undefined,\n      type: params.type\n    } : undefined;\n    const response = await api.get<Transaction[]>('/admin/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async updateTransactionStatus(\n    transactionId: number, \n    status: 'COMPLETED' | 'FAILED'\n  ): Promise<Transaction> {\n    const response = await api.patch<Transaction>(\n      `/admin/transactions/${transactionId}`,\n      { status }\n    );\n    return response.data;\n  },\n\n  async getUsers(params?: { limit?: number; offset?: number }): Promise<any[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get('/admin/users', { params: apiParams });\n    return response.data;\n  },\n\n  async createUser(data: { username: string; email: string; password: string; role: string }): Promise<any> {\n    const response = await api.post('/admin/users', data);\n    return response.data;\n  },\n\n  async updateUser(userId: string, data: any): Promise<any> {\n    const response = await api.patch(`/admin/users/${userId}`, data);\n    return response.data;\n  },\n\n  async deleteUser(userId: string): Promise<void> {\n    await api.delete(`/admin/users/${userId}`);\n  },\n\n  async generateApiKey(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/generate-api-key`);\n    return response.data;\n  },\n\n  async updateUserMedLimits(userId: string, limits: any): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/med-limits`, limits);\n    return response.data;\n  },\n\n  async adjustUserReputation(userId: string, reputation: any): Promise<any> {\n    const response = await api.put(`/account-validation/user/${userId}/limits`, reputation);\n    return response.data;\n  },\n\n  async getSystemStats(): Promise<any> {\n    const response = await api.get('/admin/stats');\n    return response.data;\n  },\n\n  async getUserStats(userId?: string): Promise<any> {\n    if (userId) {\n      const response = await api.get(`/admin/users/${userId}/stats`);\n      return response.data;\n    }\n    const response = await api.get('/admin/stats/users');\n    return response.data;\n  },\n\n  async getAuditStats(startDate?: Date, endDate?: Date): Promise<any> {\n    const params = {\n      startDate: startDate?.toISOString(),\n      endDate: endDate?.toISOString(),\n    };\n    const response = await api.get('/admin/stats/audit', { params });\n    return response.data;\n  },\n\n  async getAuditLogs(params?: {\n    skip?: number;\n    take?: number;\n    userId?: string;\n    action?: string;\n    resource?: string;\n    startDate?: Date;\n    endDate?: Date;\n  }): Promise<any[]> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      userId: params.userId,\n      action: params.action,\n      resource: params.resource,\n      startDate: params.startDate?.toISOString(),\n      endDate: params.endDate?.toISOString(),\n    } : undefined;\n    const response = await api.get('/admin/audit-logs', { params: apiParams });\n    return response.data;\n  },\n\n  // User Limits Management (MED Compliance)\n  async getAllUsersWithLimits(params?: {\n    skip?: number;\n    take?: number;\n    isFirstDay?: boolean;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n  }): Promise<any> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      isFirstDay: params.isFirstDay,\n      isKycVerified: params.isKycVerified,\n      isHighRiskUser: params.isHighRiskUser,\n    } : undefined;\n    const response = await api.get('/admin/users/limits', { params: apiParams });\n    return response.data;\n  },\n\n  async getUserLimits(userId: string): Promise<any> {\n    const response = await api.get(`/admin/users/${userId}/limits`);\n    return response.data;\n  },\n\n  async updateUserLimits(userId: string, limits: {\n    dailyDepositLimit?: number;\n    dailyWithdrawLimit?: number;\n    dailyTransferLimit?: number;\n    maxDepositPerTx?: number;\n    maxWithdrawPerTx?: number;\n    maxTransferPerTx?: number;\n    monthlyDepositLimit?: number;\n    monthlyWithdrawLimit?: number;\n    monthlyTransferLimit?: number;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n    notes?: string;\n  }): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/limits`, limits);\n    return response.data;\n  },\n\n  async resetUserFirstDay(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/reset-first-day`);\n    return response.data;\n  },\n\n  async applyKycLimits(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/apply-kyc-limits`);\n    return response.data;\n  },\n};\n\nexport const userService = {\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/pix/limits');\n    return response.data;\n  },\n};\n\nexport const apiKeyService = {\n  async getApiKeyStatus(): Promise<{ hasApiKey: boolean; createdAt?: string }> {\n    const response = await api.get('/auth/apitoken');\n    return response.data;\n  },\n\n  async generateApiKey(data: { name?: string; expirationDays?: number }): Promise<any> {\n    const response = await api.post('/auth/apitoken', data);\n    return response.data;\n  },\n\n  async revokeApiKey(): Promise<void> {\n    await api.delete('/auth/apitoken');\n  },\n};\n\nexport const apiKeyRequestService = {\n  async getMyRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-requests');\n    return response.data;\n  },\n\n  async getMyApiKeys(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-api-keys');\n    return response.data;\n  },\n\n  async createRequest(data: {\n    usageReason: string;\n    serviceUrl: string;\n    estimatedVolume: string;\n    usageType: 'SINGLE_CPF' | 'MULTIPLE_CPF';\n  }): Promise<any> {\n    const response = await api.post('/api-key-requests', data);\n    return response.data;\n  },\n\n  async getPendingRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests');\n    return response.data;\n  },\n\n  async approveRequest(requestId: string, data?: { approvalNotes?: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/approve`, data || {});\n    return response.data;\n  },\n\n  async rejectRequest(requestId: string, data: { approvalNotes: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/reject`, data);\n    return response.data;\n  },\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/%28dashboard%29/admin/users/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { adminService } from '@/app/lib/services';\nimport { UserRole, getRoleLabel } from '@/app/types/user-role';\nimport { \n  Users, \n  Search, \n  Filter, \n  UserPlus,\n  Edit,\n  Trash2,\n  Shield,\n  Ban,\n  CheckCircle,\n  XCircle,\n  Key,\n  Mail,\n  Calendar,\n  Activity,\n  Settings,\n  DollarSign,\n  X,\n  Eye,\n  EyeOff,\n  Copy,\n  RefreshCw,\n  User,\n  Lock,\n  Unlock,\n  CreditCard,\n  TrendingUp,\n  AlertCircle\n} from 'lucide-react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { translateStatus } from '@/app/lib/translations';\n\ninterface User {\n  id: string;\n  email: string;\n  username: string;\n  role: string;\n  isActive: boolean;\n  apiKey?: string;\n  createdAt: string;\n  lastLoginAt?: string;\n  isAccountValidated?: boolean;\n  validatedAt?: string;\n  apiDailyLimit?: number;\n  apiMonthlyLimit?: number;\n}\n\ninterface UserStats {\n  totalTransactions: number;\n  totalVolume: number;\n  pendingTransactions: number;\n  completedTransactions: number;\n}\n\nexport default function AdminUsersPage() {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterRole, setFilterRole] = useState<string>('all');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [filterValidated, setFilterValidated] = useState<string>('all');\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [showUserModal, setShowUserModal] = useState(false);\n  const [showNewUserModal, setShowNewUserModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [userStats, setUserStats] = useState<UserStats | null>(null);\n  const [loadingStats, setLoadingStats] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  \n  const [newUserData, setNewUserData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    role: UserRole.USER,\n  });\n\n  const [editUserData, setEditUserData] = useState({\n    username: '',\n    email: '',\n    role: UserRole.USER,\n    apiDailyLimit: 6000,\n    apiMonthlyLimit: 180000,\n  });\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  const loadUsers = async (isRefresh = false) => {\n    if (isRefresh) {\n      setRefreshing(true);\n    } else {\n      setLoading(true);\n    }\n    try {\n      const data = await adminService.getUsers({ limit: 1000 });\n      setUsers(data);\n      toast.success('Usu√°rios carregados com sucesso');\n    } catch (error) {\n      console.error('Error loading users:', error);\n      toast.error('Erro ao carregar usu√°rios');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  const loadUserStats = async (userId: string) => {\n    setLoadingStats(true);\n    try {\n      const stats = await adminService.getUserStats(userId);\n      setUserStats(stats);\n    } catch (error) {\n      console.error('Error loading user stats:', error);\n      toast.error('Erro ao carregar estat√≠sticas');\n    } finally {\n      setLoadingStats(false);\n    }\n  };\n\n  const handleToggleStatus = async (userId: string, currentStatus: boolean) => {\n    try {\n      await adminService.updateUser(userId, { isActive: !currentStatus });\n      toast.success(`Usu√°rio ${!currentStatus ? 'ativado' : 'desativado'} com sucesso`);\n      loadUsers();\n    } catch (error) {\n      console.error('Error toggling user status:', error);\n      toast.error('Erro ao alterar status do usu√°rio');\n    }\n  };\n\n  const handleDeleteUser = async (userId: string) => {\n    if (!confirm('Tem certeza que deseja excluir este usu√°rio?')) return;\n    \n    try {\n      await adminService.deleteUser(userId);\n      toast.success('Usu√°rio exclu√≠do com sucesso');\n      loadUsers();\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      toast.error('Erro ao excluir usu√°rio');\n    }\n  };\n\n  const handleCreateUser = async () => {\n    try {\n      await adminService.createUser(newUserData);\n      toast.success('Usu√°rio criado com sucesso');\n      setShowNewUserModal(false);\n      setNewUserData({\n        username: '',\n        email: '',\n        password: '',\n        role: UserRole.USER,\n      });\n      loadUsers();\n    } catch (error) {\n      console.error('Error creating user:', error);\n      toast.error('Erro ao criar usu√°rio');\n    }\n  };\n\n  const handleUpdateUser = async () => {\n    if (!selectedUser) return;\n    \n    try {\n      await adminService.updateUser(selectedUser.id, editUserData);\n      toast.success('Usu√°rio atualizado com sucesso');\n      setShowEditModal(false);\n      loadUsers();\n    } catch (error) {\n      console.error('Error updating user:', error);\n      toast.error('Erro ao atualizar usu√°rio');\n    }\n  };\n\n  const handleGenerateApiKey = async (userId: string) => {\n    try {\n      const response = await adminService.generateApiKey(userId);\n      toast.success('API Key gerada com sucesso');\n      if (response.apiKey) {\n        navigator.clipboard.writeText(response.apiKey);\n        toast.success('API Key copiada para a √°rea de transfer√™ncia');\n      }\n      loadUsers();\n    } catch (error) {\n      console.error('Error generating API key:', error);\n      toast.error('Erro ao gerar API Key');\n    }\n  };\n\n  const openUserDetails = (user: User) => {\n    setSelectedUser(user);\n    setShowUserModal(true);\n    loadUserStats(user.id);\n  };\n\n  const openEditModal = (user: User) => {\n    setSelectedUser(user);\n    setEditUserData({\n      username: user.username,\n      email: user.email,\n      role: user.role as UserRole,\n      apiDailyLimit: user.apiDailyLimit || 6000,\n      apiMonthlyLimit: user.apiMonthlyLimit || 180000,\n    });\n    setShowEditModal(true);\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    toast.success('Copiado para a √°rea de transfer√™ncia');\n  };\n\n  const formatDate = (date: string) => {\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    }).format(new Date(date));\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(amount);\n  };\n\n  // Filtered users\n  const filteredUsers = users.filter(user => {\n    const matchesSearch = user.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                          user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                          user.id.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesRole = filterRole === 'all' || user.role.toLowerCase() === filterRole.toLowerCase();\n    const matchesStatus = filterStatus === 'all' || \n                         (filterStatus === 'active' && user.isActive) ||\n                         (filterStatus === 'inactive' && !user.isActive);\n    const matchesValidated = filterValidated === 'all' ||\n                            (filterValidated === 'validated' && user.isAccountValidated) ||\n                            (filterValidated === 'not-validated' && !user.isAccountValidated);\n    \n    return matchesSearch && matchesRole && matchesStatus && matchesValidated;\n  });\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\" />\n          <p className=\"text-gray-400\">Carregando usu√°rios...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <Toaster position=\"top-right\" />\n      \n      {/* Header */}\n      <div className=\"mb-8 flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-white flex items-center\">\n            <Users className=\"mr-3\" />\n            Gest√£o de Usu√°rios\n          </h1>\n          <p className=\"text-gray-400 mt-2\">\n            {filteredUsers.length} de {users.length} usu√°rios\n          </p>\n        </div>\n        <div className=\"flex space-x-3\">\n          <button\n            onClick={() => loadUsers(true)}\n            disabled={refreshing}\n            className=\"bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition duration-200 flex items-center space-x-2\"\n          >\n            <RefreshCw className={`w-5 h-5 ${refreshing ? 'animate-spin' : ''}`} />\n            <span>Atualizar</span>\n          </button>\n          <button\n            onClick={() => setShowNewUserModal(true)}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition duration-200 flex items-center space-x-2\"\n          >\n            <UserPlus className=\"w-5 h-5\" />\n            <span>Novo Usu√°rio</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4 mb-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          {/* Search */}\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nome, email ou ID...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          {/* Role Filter */}\n          <select\n            value={filterRole}\n            onChange={(e) => setFilterRole(e.target.value)}\n            className=\"px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">Todos os Pap√©is</option>\n            <option value=\"admin\">Administradores</option>\n            <option value=\"user\">Usu√°rios</option>\n          </select>\n\n          {/* Status Filter */}\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">Todos os Status</option>\n            <option value=\"active\">Ativos</option>\n            <option value=\"inactive\">Inativos</option>\n          </select>\n\n          {/* Validation Filter */}\n          <select\n            value={filterValidated}\n            onChange={(e) => setFilterValidated(e.target.value)}\n            className=\"px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"all\">Toda Valida√ß√£o</option>\n            <option value=\"validated\">Validados</option>\n            <option value=\"not-validated\">N√£o Validados</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Users Table */}\n      <div className=\"bg-gray-800 border border-gray-700 rounded-lg shadow-lg overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-900/50\">\n              <tr>\n                <th className=\"text-left py-3 px-6 text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  Usu√°rio\n                </th>\n                <th className=\"text-left py-3 px-6 text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  Email\n                </th>\n                <th className=\"text-left py-3 px-6 text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  Papel\n                </th>\n                <th className=\"text-left py-3 px-6 text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"text-left py-3 px-6 text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  Valida√ß√£o\n                </th>\n                <th className=\"text-left py-3 px-6 text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  Criado em\n                </th>\n                <th className=\"text-left py-3 px-6 text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  √öltimo Login\n                </th>\n                <th className=\"text-left py-3 px-6 text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  A√ß√µes\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-700\">\n              {filteredUsers.map((user) => (\n                <tr key={user.id} className=\"hover:bg-gray-700/30 transition-colors\">\n                  <td className=\"py-4 px-6\">\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 bg-gray-700 rounded-full flex items-center justify-center mr-3\">\n                        <User className=\"w-5 h-5 text-gray-400\" />\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-medium text-white\">{user.username}</div>\n                        <div className=\"text-xs text-gray-400 font-mono\">{user.id.slice(0, 8)}...</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    <span className=\"text-sm text-gray-300\">{user.email}</span>\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                      user.role === 'ADMIN' \n                        ? 'bg-purple-900/50 text-purple-400' \n                        : 'bg-blue-900/50 text-blue-400'\n                    }`}>\n                      <Shield className=\"w-3 h-3 mr-1\" />\n                      {getRoleLabel(user.role)}\n                    </span>\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                      user.isActive \n                        ? 'bg-green-900/50 text-green-400' \n                        : 'bg-red-900/50 text-red-400'\n                    }`}>\n                      {user.isActive ? (\n                        <>\n                          <CheckCircle className=\"w-3 h-3 mr-1\" />\n                          Ativo\n                        </>\n                      ) : (\n                        <>\n                          <XCircle className=\"w-3 h-3 mr-1\" />\n                          Inativo\n                        </>\n                      )}\n                    </span>\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    {user.isAccountValidated ? (\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-900/50 text-green-400\">\n                        <CheckCircle className=\"w-3 h-3 mr-1\" />\n                        Validado\n                      </span>\n                    ) : (\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-900/50 text-yellow-400\">\n                        <AlertCircle className=\"w-3 h-3 mr-1\" />\n                        Pendente\n                      </span>\n                    )}\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    <span className=\"text-sm text-gray-400\">\n                      {formatDate(user.createdAt)}\n                    </span>\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    <span className=\"text-sm text-gray-400\">\n                      {user.lastLoginAt ? formatDate(user.lastLoginAt) : '-'}\n                    </span>\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => openUserDetails(user)}\n                        className=\"p-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition duration-200\"\n                        title=\"Ver detalhes\"\n                      >\n                        <Eye className=\"w-4 h-4\" />\n                      </button>\n                      <button\n                        onClick={() => openEditModal(user)}\n                        className=\"p-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition duration-200\"\n                        title=\"Editar usu√°rio\"\n                      >\n                        <Edit className=\"w-4 h-4\" />\n                      </button>\n                      <button\n                        onClick={() => handleToggleStatus(user.id, user.isActive)}\n                        className={`p-2 ${\n                          user.isActive \n                            ? 'bg-orange-600 hover:bg-orange-700' \n                            : 'bg-green-600 hover:bg-green-700'\n                        } text-white rounded-lg transition duration-200`}\n                        title={user.isActive ? 'Desativar' : 'Ativar'}\n                      >\n                        {user.isActive ? <Lock className=\"w-4 h-4\" /> : <Unlock className=\"w-4 h-4\" />}\n                      </button>\n                      <button\n                        onClick={() => handleDeleteUser(user.id)}\n                        className=\"p-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition duration-200\"\n                        title=\"Excluir usu√°rio\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          \n          {filteredUsers.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Users className=\"w-12 h-12 text-gray-600 mx-auto mb-4\" />\n              <p className=\"text-gray-400\">Nenhum usu√°rio encontrado</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* User Details Modal */}\n      {showUserModal && selectedUser && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-start mb-6\">\n              <h2 className=\"text-2xl font-bold text-white\">Detalhes do Usu√°rio</h2>\n              <button\n                onClick={() => {\n                  setShowUserModal(false);\n                  setSelectedUser(null);\n                  setUserStats(null);\n                }}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                <X className=\"w-6 h-6\" />\n              </button>\n            </div>\n\n            <div className=\"space-y-6\">\n              {/* User Info */}\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm text-gray-400\">ID</label>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-white font-mono text-sm\">{selectedUser.id}</span>\n                    <button\n                      onClick={() => copyToClipboard(selectedUser.id)}\n                      className=\"text-gray-400 hover:text-white\"\n                    >\n                      <Copy className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Username</label>\n                  <p className=\"text-white\">{selectedUser.username}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Email</label>\n                  <p className=\"text-white\">{selectedUser.email}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Papel</label>\n                  <p className=\"text-white\">{getRoleLabel(selectedUser.role)}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Status</label>\n                  <p className={selectedUser.isActive ? 'text-green-400' : 'text-red-400'}>\n                    {selectedUser.isActive ? 'Ativo' : 'Inativo'}\n                  </p>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Valida√ß√£o</label>\n                  <p className={selectedUser.isAccountValidated ? 'text-green-400' : 'text-yellow-400'}>\n                    {selectedUser.isAccountValidated ? 'Validado' : 'N√£o Validado'}\n                  </p>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">Criado em</label>\n                  <p className=\"text-white\">{formatDate(selectedUser.createdAt)}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm text-gray-400\">√öltimo Login</label>\n                  <p className=\"text-white\">\n                    {selectedUser.lastLoginAt ? formatDate(selectedUser.lastLoginAt) : 'Nunca'}\n                  </p>\n                </div>\n              </div>\n\n              {/* API Key - Note: This shows legacy single API key, users now manage multiple keys through API Key Requests */}\n              {selectedUser.apiKey && (\n                <div>\n                  <label className=\"text-sm text-gray-400\">Legacy API Key</label>\n                  <div className=\"flex items-center space-x-2 mt-1\">\n                    <code className=\"flex-1 bg-gray-900 p-2 rounded text-xs text-green-400 font-mono\">\n                      {selectedUser.apiKey}\n                    </code>\n                    <button\n                      onClick={() => copyToClipboard(selectedUser.apiKey!)}\n                      className=\"p-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg\"\n                    >\n                      <Copy className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Usu√°rios agora podem ter m√∫ltiplas API keys atrav√©s do sistema de solicita√ß√µes\n                  </p>\n                </div>\n              )}\n\n              {/* User Stats */}\n              {loadingStats ? (\n                <div className=\"text-center py-4\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\n                  <p className=\"text-gray-400 mt-2\">Carregando estat√≠sticas...</p>\n                </div>\n              ) : userStats && (\n                <div>\n                  <h3 className=\"text-lg font-semibold text-white mb-3\">Estat√≠sticas</h3>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div className=\"bg-gray-900 p-3 rounded-lg\">\n                      <p className=\"text-xs text-gray-400\">Total de Transa√ß√µes</p>\n                      <p className=\"text-xl font-bold text-white\">{userStats.totalTransactions}</p>\n                    </div>\n                    <div className=\"bg-gray-900 p-3 rounded-lg\">\n                      <p className=\"text-xs text-gray-400\">Volume Total</p>\n                      <p className=\"text-xl font-bold text-white\">{formatCurrency(userStats.totalVolume)}</p>\n                    </div>\n                    <div className=\"bg-gray-900 p-3 rounded-lg\">\n                      <p className=\"text-xs text-gray-400\">Pendentes</p>\n                      <p className=\"text-xl font-bold text-yellow-400\">{userStats.pendingTransactions}</p>\n                    </div>\n                    <div className=\"bg-gray-900 p-3 rounded-lg\">\n                      <p className=\"text-xs text-gray-400\">Conclu√≠das</p>\n                      <p className=\"text-xl font-bold text-green-400\">{userStats.completedTransactions}</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Actions */}\n              <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-700\">\n                <button\n                  onClick={() => handleGenerateApiKey(selectedUser.id)}\n                  className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition duration-200 flex items-center space-x-2\"\n                >\n                  <Key className=\"w-4 h-4\" />\n                  <span>Gerar Nova API Key</span>\n                </button>\n                <button\n                  onClick={() => {\n                    setShowUserModal(false);\n                    openEditModal(selectedUser);\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition duration-200 flex items-center space-x-2\"\n                >\n                  <Edit className=\"w-4 h-4\" />\n                  <span>Editar</span>\n                </button>\n                <button\n                  onClick={() => setShowUserModal(false)}\n                  className=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition duration-200\"\n                >\n                  Fechar\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* New User Modal */}\n      {showNewUserModal && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 max-w-md w-full mx-4\">\n            <h2 className=\"text-2xl font-bold text-white mb-6\">Criar Novo Usu√°rio</h2>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Nome de Usu√°rio\n                </label>\n                <input\n                  type=\"text\"\n                  value={newUserData.username}\n                  onChange={(e) => setNewUserData({ ...newUserData, username: e.target.value })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"johndoe\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Email\n                </label>\n                <input\n                  type=\"email\"\n                  value={newUserData.email}\n                  onChange={(e) => setNewUserData({ ...newUserData, email: e.target.value })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"john@example.com\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Senha\n                </label>\n                <input\n                  type=\"password\"\n                  value={newUserData.password}\n                  onChange={(e) => setNewUserData({ ...newUserData, password: e.target.value })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Papel\n                </label>\n                <select\n                  value={newUserData.role}\n                  onChange={(e) => setNewUserData({ ...newUserData, role: e.target.value as UserRole })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value={UserRole.USER}>Usu√°rio</option>\n                  <option value={UserRole.ADMIN}>Administrador</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end space-x-3 mt-6\">\n              <button\n                onClick={() => setShowNewUserModal(false)}\n                className=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition duration-200\"\n              >\n                Cancelar\n              </button>\n              <button\n                onClick={handleCreateUser}\n                className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition duration-200\"\n              >\n                Criar Usu√°rio\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit User Modal */}\n      {showEditModal && selectedUser && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-6 max-w-md w-full mx-4\">\n            <h2 className=\"text-2xl font-bold text-white mb-6\">Editar Usu√°rio</h2>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Nome de Usu√°rio\n                </label>\n                <input\n                  type=\"text\"\n                  value={editUserData.username}\n                  onChange={(e) => setEditUserData({ ...editUserData, username: e.target.value })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Email\n                </label>\n                <input\n                  type=\"email\"\n                  value={editUserData.email}\n                  onChange={(e) => setEditUserData({ ...editUserData, email: e.target.value })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Papel\n                </label>\n                <select\n                  value={editUserData.role}\n                  onChange={(e) => setEditUserData({ ...editUserData, role: e.target.value as UserRole })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value={UserRole.USER}>Usu√°rio</option>\n                  <option value={UserRole.ADMIN}>Administrador</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Limite Di√°rio API\n                </label>\n                <input\n                  type=\"number\"\n                  value={editUserData.apiDailyLimit}\n                  onChange={(e) => setEditUserData({ ...editUserData, apiDailyLimit: parseInt(e.target.value) })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Limite Mensal API\n                </label>\n                <input\n                  type=\"number\"\n                  value={editUserData.apiMonthlyLimit}\n                  onChange={(e) => setEditUserData({ ...editUserData, apiMonthlyLimit: parseInt(e.target.value) })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end space-x-3 mt-6\">\n              <button\n                onClick={() => setShowEditModal(false)}\n                className=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition duration-200\"\n              >\n                Cancelar\n              </button>\n              <button\n                onClick={handleUpdateUser}\n                className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition duration-200\"\n              >\n                Salvar Altera√ß√µes\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}