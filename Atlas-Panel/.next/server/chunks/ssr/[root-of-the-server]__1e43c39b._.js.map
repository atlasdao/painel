{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/lib/services.ts"],"sourcesContent":["import api from './api';\nimport { Transaction, DashboardStats, Balance, PixQRCode } from '@/app/types';\n\nexport const accountValidationService = {\n  async getValidationStatus(): Promise<any> {\n    const response = await api.get('/account-validation/status');\n    return response.data;\n  },\n\n  async createValidationPayment(depixAddress: string): Promise<any> {\n    const response = await api.post('/account-validation/create-payment', { depixAddress });\n    return response.data;\n  },\n\n  async getValidationRequirements(): Promise<any> {\n    const response = await api.get('/account-validation/requirements');\n    return response.data;\n  },\n\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/account-validation/limits');\n    return response.data;\n  },\n\n  async manualValidationCheck(): Promise<any> {\n    const response = await api.post('/account-validation/manual-check');\n    return response.data;\n  },\n};\n\nexport const pixService = {\n  async createDeposit(amount: number, pixKey?: string): Promise<PixQRCode> {\n    const response = await api.post<PixQRCode>('/pix/deposit', { amount, pixKey });\n    return response.data;\n  },\n\n  async generateQRCode(params: {\n    amount: number;\n    depixAddress: string; // Campo obrigat√≥rio\n    description?: string;\n    expirationMinutes?: number;\n  }): Promise<any> {\n    const response = await api.post('/pix/qrcode', params);\n    return response.data;\n  },\n\n  async createWithdraw(amount: number, pixKey: string): Promise<Transaction> {\n    const response = await api.post<Transaction>('/pix/withdraw', { amount, pixKey });\n    return response.data;\n  },\n\n  async getTransactions(params?: { limit?: number; offset?: number }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get<Transaction[]>('/pix/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async getTransaction(id: number): Promise<Transaction> {\n    const response = await api.get<Transaction>(`/pix/transactions/${id}`);\n    return response.data;\n  },\n\n  async getBalance(): Promise<Balance> {\n    const response = await api.get<Balance>('/pix/balance');\n    return response.data;\n  },\n\n  async checkDepositStatus(transactionId: string): Promise<any> {\n    const response = await api.get<any>(`/pix/deposit/${transactionId}/status`);\n    return response.data;\n  },\n};\n\nexport const adminService = {\n  async getDashboardStats(): Promise<DashboardStats> {\n    const response = await api.get<DashboardStats>('/admin/dashboard');\n    return response.data;\n  },\n\n  async getAllTransactions(params?: { \n    limit?: number; \n    offset?: number;\n    status?: string;\n    userId?: number | string;\n    type?: string;\n  }): Promise<Transaction[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset,\n      status: params.status,\n      userId: params.userId ? (typeof params.userId === 'string' ? params.userId : params.userId.toString()) : undefined,\n      type: params.type\n    } : undefined;\n    const response = await api.get<Transaction[]>('/admin/transactions', { params: apiParams });\n    return response.data;\n  },\n\n  async updateTransactionStatus(\n    transactionId: number, \n    status: 'COMPLETED' | 'FAILED'\n  ): Promise<Transaction> {\n    const response = await api.patch<Transaction>(\n      `/admin/transactions/${transactionId}`,\n      { status }\n    );\n    return response.data;\n  },\n\n  async getUsers(params?: { limit?: number; offset?: number }): Promise<any[]> {\n    // Convert limit/offset to take/skip for API compatibility\n    const apiParams = params ? {\n      take: params.limit,\n      skip: params.offset\n    } : undefined;\n    const response = await api.get('/admin/users', { params: apiParams });\n    return response.data;\n  },\n\n  async createUser(data: { username: string; email: string; password: string; role: string }): Promise<any> {\n    const response = await api.post('/admin/users', data);\n    return response.data;\n  },\n\n  async updateUser(userId: string, data: any): Promise<any> {\n    const response = await api.patch(`/admin/users/${userId}`, data);\n    return response.data;\n  },\n\n  async deleteUser(userId: string): Promise<void> {\n    await api.delete(`/admin/users/${userId}`);\n  },\n\n  async generateApiKey(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/generate-api-key`);\n    return response.data;\n  },\n\n  async updateUserMedLimits(userId: string, limits: any): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/med-limits`, limits);\n    return response.data;\n  },\n\n  async adjustUserReputation(userId: string, reputation: any): Promise<any> {\n    const response = await api.put(`/account-validation/user/${userId}/limits`, reputation);\n    return response.data;\n  },\n\n  async getSystemStats(): Promise<any> {\n    const response = await api.get('/admin/stats');\n    return response.data;\n  },\n\n  async getUserStats(userId?: string): Promise<any> {\n    if (userId) {\n      const response = await api.get(`/admin/users/${userId}/stats`);\n      return response.data;\n    }\n    const response = await api.get('/admin/stats/users');\n    return response.data;\n  },\n\n  async getAuditStats(startDate?: Date, endDate?: Date): Promise<any> {\n    const params = {\n      startDate: startDate?.toISOString(),\n      endDate: endDate?.toISOString(),\n    };\n    const response = await api.get('/admin/stats/audit', { params });\n    return response.data;\n  },\n\n  async getAuditLogs(params?: {\n    skip?: number;\n    take?: number;\n    userId?: string;\n    action?: string;\n    resource?: string;\n    startDate?: Date;\n    endDate?: Date;\n  }): Promise<any[]> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      userId: params.userId,\n      action: params.action,\n      resource: params.resource,\n      startDate: params.startDate?.toISOString(),\n      endDate: params.endDate?.toISOString(),\n    } : undefined;\n    const response = await api.get('/admin/audit-logs', { params: apiParams });\n    return response.data;\n  },\n\n  // User Limits Management (MED Compliance)\n  async getAllUsersWithLimits(params?: {\n    skip?: number;\n    take?: number;\n    isFirstDay?: boolean;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n  }): Promise<any> {\n    const apiParams = params ? {\n      skip: params.skip,\n      take: params.take,\n      isFirstDay: params.isFirstDay,\n      isKycVerified: params.isKycVerified,\n      isHighRiskUser: params.isHighRiskUser,\n    } : undefined;\n    const response = await api.get('/admin/users/limits', { params: apiParams });\n    return response.data;\n  },\n\n  async getUserLimits(userId: string): Promise<any> {\n    const response = await api.get(`/admin/users/${userId}/limits`);\n    return response.data;\n  },\n\n  async updateUserLimits(userId: string, limits: {\n    dailyDepositLimit?: number;\n    dailyWithdrawLimit?: number;\n    dailyTransferLimit?: number;\n    maxDepositPerTx?: number;\n    maxWithdrawPerTx?: number;\n    maxTransferPerTx?: number;\n    monthlyDepositLimit?: number;\n    monthlyWithdrawLimit?: number;\n    monthlyTransferLimit?: number;\n    isKycVerified?: boolean;\n    isHighRiskUser?: boolean;\n    notes?: string;\n  }): Promise<any> {\n    const response = await api.put(`/admin/users/${userId}/limits`, limits);\n    return response.data;\n  },\n\n  async resetUserFirstDay(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/reset-first-day`);\n    return response.data;\n  },\n\n  async applyKycLimits(userId: string): Promise<any> {\n    const response = await api.post(`/admin/users/${userId}/limits/apply-kyc-limits`);\n    return response.data;\n  },\n};\n\nexport const userService = {\n  async getUserLimits(): Promise<any> {\n    const response = await api.get('/pix/limits');\n    return response.data;\n  },\n};\n\nexport const apiKeyService = {\n  async getApiKeyStatus(): Promise<{ hasApiKey: boolean; createdAt?: string }> {\n    const response = await api.get('/auth/apitoken');\n    return response.data;\n  },\n\n  async generateApiKey(data: { name?: string; expirationDays?: number }): Promise<any> {\n    const response = await api.post('/auth/apitoken', data);\n    return response.data;\n  },\n\n  async revokeApiKey(): Promise<void> {\n    await api.delete('/auth/apitoken');\n  },\n};\n\nexport const apiKeyRequestService = {\n  async getMyRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-requests');\n    return response.data;\n  },\n\n  async getMyApiKeys(): Promise<any[]> {\n    const response = await api.get('/api-key-requests/my-api-keys');\n    return response.data;\n  },\n\n  async createRequest(data: {\n    usageReason: string;\n    serviceUrl: string;\n    estimatedVolume: string;\n    usageType: 'SINGLE_CPF' | 'MULTIPLE_CPF';\n  }): Promise<any> {\n    const response = await api.post('/api-key-requests', data);\n    return response.data;\n  },\n\n  async getPendingRequests(): Promise<any[]> {\n    const response = await api.get('/api-key-requests');\n    return response.data;\n  },\n\n  async approveRequest(requestId: string, data?: { approvalNotes?: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/approve`, data || {});\n    return response.data;\n  },\n\n  async rejectRequest(requestId: string, data: { approvalNotes: string }): Promise<any> {\n    const response = await api.put(`/api-key-requests/${requestId}/reject`, data);\n    return response.data;\n  },\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///home/painel/Atlas-Panel/app/%28dashboard%29/payment-links/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { api } from '@/app/lib/api';\nimport { accountValidationService } from '@/app/lib/services';\nimport { toast, Toaster } from 'sonner';\nimport { Link, Plus, QrCode, Copy, Download, Trash2, ExternalLink, DollarSign, Clock, Shield, CheckCircle, Loader, AlertCircle } from 'lucide-react';\nimport QRCode from 'qrcode';\n\nexport default function PaymentLinksPage() {\n  const [paymentLinks, setPaymentLinks] = useState<any[]>([]);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [qrCodeUrls, setQrCodeUrls] = useState<{ [key: string]: string }>({});\n  const [linkData, setLinkData] = useState({\n    amount: '',\n    walletAddress: '',\n    description: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [validationStatus, setValidationStatus] = useState<{\n    isValidated: boolean;\n    validationPaymentId?: string;\n    validatedAt?: string;\n    limits?: any;\n    reputation?: any;\n  } | null>(null);\n  const [validationRequirements, setValidationRequirements] = useState<{\n    amount: number;\n    description: string;\n    benefits: string[];\n  } | null>(null);\n  const [loadingValidation, setLoadingValidation] = useState(true);\n\n  useEffect(() => {\n    checkValidationStatus();\n    fetchPaymentLinks();\n    fetchValidationRequirements();\n  }, []);\n\n  const checkValidationStatus = async () => {\n    setLoadingValidation(true);\n    try {\n      const status = await accountValidationService.getValidationStatus();\n      setValidationStatus(status);\n    } catch (error: any) {\n      console.error('Error checking validation status:', error);\n      \n      // More detailed error handling\n      if (error.response?.status === 401) {\n        toast.error('Usu√°rio n√£o autenticado. Fa√ßa login novamente.');\n        // Redirect to login\n        window.location.href = '/login';\n      } else if (error.response?.status === 404) {\n        toast.error('Servi√ßo de valida√ß√£o n√£o encontrado');\n      } else if (error.response?.data?.message) {\n        toast.error(`Erro: ${error.response.data.message}`);\n      } else {\n        toast.error('Erro ao verificar status de valida√ß√£o');\n      }\n    } finally {\n      setLoadingValidation(false);\n    }\n  };\n\n  const fetchValidationRequirements = async () => {\n    try {\n      const requirements = await accountValidationService.getValidationRequirements();\n      setValidationRequirements(requirements);\n    } catch (error) {\n      console.error('Error fetching validation requirements:', error);\n    }\n  };\n\n  const fetchPaymentLinks = async () => {\n    try {\n      const response = await api.get('/payment-links');\n      setPaymentLinks(response.data);\n      \n      // Generate QR codes for each link\n      response.data.forEach((link: any) => {\n        generateQRCode(link.shortCode);\n      });\n    } catch (error) {\n      console.error('Error fetching payment links:', error);\n    }\n  };\n\n  const generateQRCode = async (shortCode: string) => {\n    try {\n      const url = `${window.location.origin}/pay/${shortCode}`;\n      const qrCodeDataUrl = await QRCode.toDataURL(url, {\n        width: 256,\n        margin: 2,\n        color: {\n          dark: '#000000',\n          light: '#FFFFFF'\n        }\n      });\n      setQrCodeUrls(prev => ({ ...prev, [shortCode]: qrCodeDataUrl }));\n    } catch (error) {\n      console.error('Error generating QR code:', error);\n    }\n  };\n\n  const handleCreateLink = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const response = await api.post('/payment-links', {\n        ...linkData,\n        amount: parseFloat(linkData.amount)\n      });\n      \n      toast.success('Link de pagamento criado com sucesso!');\n      setShowCreateForm(false);\n      setLinkData({ amount: '', walletAddress: '', description: '' });\n      fetchPaymentLinks();\n    } catch (error: any) {\n      toast.error(error.response?.data?.message || 'Erro ao criar link de pagamento');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDeleteLink = async (id: string) => {\n    if (!confirm('Tem certeza que deseja excluir este link?')) return;\n\n    try {\n      await api.delete(`/payment-links/${id}`);\n      toast.success('Link exclu√≠do com sucesso!');\n      fetchPaymentLinks();\n    } catch (error: any) {\n      toast.error(error.response?.data?.message || 'Erro ao excluir link');\n    }\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    toast.success('Link copiado!');\n  };\n\n  const downloadQRCode = (shortCode: string, description: string) => {\n    const qrCodeUrl = qrCodeUrls[shortCode];\n    if (!qrCodeUrl) return;\n\n    const link = document.createElement('a');\n    link.download = `qrcode-${shortCode}-${description || 'pagamento'}.png`;\n    link.href = qrCodeUrl;\n    link.click();\n  };\n\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(value);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <Toaster position=\"top-right\" />\n      \n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Links de Pagamento</h1>\n        {validationStatus?.isValidated ? (\n          <button\n            onClick={() => setShowCreateForm(true)}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\"\n          >\n            <Plus size={20} />\n            Novo Link\n          </button>\n        ) : (\n          <button\n            disabled\n            className=\"flex items-center gap-2 px-4 py-2 bg-gray-600 text-gray-400 rounded-lg cursor-not-allowed\"\n          >\n            <Shield size={20} />\n            Valida√ß√£o Necess√°ria\n          </button>\n        )}\n      </div>\n\n      {/* Info Box or Validation Required */}\n      {loadingValidation ? (\n        <div className=\"mb-6 p-4 bg-gray-800/50 border border-gray-600/30 rounded-lg\">\n          <div className=\"flex items-center gap-3\">\n            <Loader className=\"text-gray-400 animate-spin\" size={20} />\n            <p className=\"text-gray-400\">Verificando status de valida√ß√£o...</p>\n          </div>\n        </div>\n      ) : !validationStatus?.isValidated ? (\n        <div className=\"mb-6 p-6 bg-yellow-900/10 border border-yellow-500/30 rounded-lg\">\n          <div className=\"flex items-start gap-4\">\n            <div className=\"p-2 bg-yellow-500/20 rounded-lg\">\n              <Shield className=\"text-yellow-400 flex-shrink-0\" size={24} />\n            </div>\n            <div className=\"flex-1\">\n              <h3 className=\"text-yellow-400 font-semibold text-lg mb-2\">Valida√ß√£o de Conta Necess√°ria</h3>\n              <p className=\"text-gray-300 mb-5 leading-relaxed\">\n                Para criar links de pagamento, voc√™ precisa validar sua conta primeiro. \n                O processo √© simples e requer apenas um pagamento de <strong className=\"text-white\">R$ {validationRequirements?.amount ? (validationRequirements.amount).toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : '2,00'}</strong>.\n              </p>\n              \n              <a \n                href=\"/deposit\"\n                className=\"inline-flex items-center gap-2 px-5 py-3 bg-gradient-to-r from-yellow-600 to-yellow-500 hover:from-yellow-700 hover:to-yellow-600 text-white rounded-lg transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n              >\n                <Shield size={18} />\n                Validar Conta Agora\n              </a>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"mb-6 p-4 bg-blue-900/20 border border-blue-500/30 rounded-lg\">\n          <div className=\"flex items-start gap-3\">\n            <QrCode className=\"text-blue-400 mt-0.5\" size={20} />\n            <div className=\"flex-1\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <p className=\"text-blue-400 font-medium\">Links de Pagamento R√°pido</p>\n                <div className=\"flex items-center gap-1 text-green-400\">\n                  <CheckCircle size={16} />\n                  <span className=\"text-sm\">Conta Validada</span>\n                </div>\n              </div>\n              <p className=\"text-gray-300 text-sm\">\n                Crie links personalizados para receber pagamentos. Cada link gera um QR Code PIX \n                que √© renovado automaticamente a cada 28 minutos ou ap√≥s cada pagamento.\n              </p>\n              {validationStatus?.limits && (\n                <div className=\"mt-3 p-3 bg-blue-900/30 border border-blue-600/30 rounded\">\n                  <p className=\"text-blue-300 text-sm font-medium mb-1\">Seus Limites Atuais:</p>\n                  <p className=\"text-blue-300 text-sm\">\n                    Limite di√°rio: <strong>R$ {validationStatus.limits.currentDailyLimit}</strong> \n                    (Tier {validationStatus.limits.limitTier})\n                  </p>\n                  {validationStatus.reputation && (\n                    <p className=\"text-blue-300 text-sm\">\n                      Reputa√ß√£o: <strong>{validationStatus.reputation.reputationScore.toFixed(1)}</strong> \n                      ({validationStatus.reputation.totalApprovedCount} pagamentos aprovados)\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Create Form Modal */}\n      {showCreateForm && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n          <div className=\"bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4\">\n            <h2 className=\"text-xl font-bold mb-4\">Criar Link de Pagamento</h2>\n            <form onSubmit={handleCreateLink} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-white mb-2\">\n                  Valor (R$)\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0.01\"\n                  value={linkData.amount}\n                  onChange={(e) => setLinkData({ ...linkData, amount: e.target.value })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  required\n                  placeholder=\"100.00\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-white mb-2\">\n                  Carteira de Destino\n                </label>\n                <input\n                  type=\"text\"\n                  value={linkData.walletAddress}\n                  onChange={(e) => setLinkData({ ...linkData, walletAddress: e.target.value })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  required\n                  placeholder=\"Endere√ßo da carteira\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-white mb-2\">\n                  Descri√ß√£o (Opcional)\n                </label>\n                <input\n                  type=\"text\"\n                  value={linkData.description}\n                  onChange={(e) => setLinkData({ ...linkData, description: e.target.value })}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 text-white rounded-lg focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Ex: Pagamento do produto X\"\n                />\n              </div>\n\n              <div className=\"flex gap-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowCreateForm(false)}\n                  className=\"flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors\"\n                  disabled={isLoading}\n                >\n                  Cancelar\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors disabled:opacity-50\"\n                  disabled={isLoading}\n                >\n                  {isLoading ? 'Criando...' : 'Criar Link'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Payment Links Grid */}\n      {validationStatus?.isValidated ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {paymentLinks.length === 0 ? (\n            <div className=\"col-span-full bg-gray-800 border border-gray-700 rounded-lg p-12 text-center\">\n              <Link className=\"mx-auto h-12 w-12 text-gray-500 mb-4\" />\n              <p className=\"text-gray-400\">Nenhum link de pagamento criado</p>\n              <p className=\"text-gray-500 text-sm mt-2\">\n                Clique em \"Novo Link\" para criar seu primeiro link de pagamento\n              </p>\n            </div>\n          ) : (\n            paymentLinks.map((link) => (\n            <div key={link.id} className=\"bg-gray-800 border border-gray-700 rounded-lg p-6\">\n              {/* QR Code */}\n              <div className=\"flex justify-center mb-4\">\n                {qrCodeUrls[link.shortCode] && (\n                  <img \n                    src={qrCodeUrls[link.shortCode]} \n                    alt=\"QR Code\"\n                    className=\"w-32 h-32 bg-white p-2 rounded-lg\"\n                  />\n                )}\n              </div>\n\n              {/* Link Info */}\n              <div className=\"space-y-3\">\n                <div>\n                  <p className=\"text-sm text-gray-400\">Valor</p>\n                  <p className=\"text-xl font-bold text-white\">{formatCurrency(link.amount)}</p>\n                </div>\n\n                {link.description && (\n                  <div>\n                    <p className=\"text-sm text-gray-400\">Descri√ß√£o</p>\n                    <p className=\"text-white\">{link.description}</p>\n                  </div>\n                )}\n\n                <div>\n                  <p className=\"text-sm text-gray-400\">Link</p>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    <code className=\"text-xs text-blue-400 bg-gray-700 px-2 py-1 rounded flex-1 truncate\">\n                      {window.location.origin}/pay/{link.shortCode}\n                    </code>\n                    <button\n                      onClick={() => copyToClipboard(`${window.location.origin}/pay/${link.shortCode}`)}\n                      className=\"text-gray-400 hover:text-white\"\n                      title=\"Copiar link\"\n                    >\n                      <Copy size={16} />\n                    </button>\n                    <a\n                      href={`${window.location.origin}/pay/${link.shortCode}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"text-gray-400 hover:text-white\"\n                      title=\"Abrir link\"\n                    >\n                      <ExternalLink size={16} />\n                    </a>\n                  </div>\n                </div>\n\n                {/* Stats */}\n                <div className=\"grid grid-cols-2 gap-3 pt-3 border-t border-gray-700\">\n                  <div>\n                    <p className=\"text-xs text-gray-400\">Pagamentos</p>\n                    <p className=\"text-lg font-semibold text-white\">{link.totalPayments || 0}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-xs text-gray-400\">Total Recebido</p>\n                    <p className=\"text-lg font-semibold text-white\">\n                      {formatCurrency(link.totalAmount || 0)}\n                    </p>\n                  </div>\n                </div>\n\n                {/* Actions */}\n                <div className=\"flex gap-2 pt-3\">\n                  <button\n                    onClick={() => downloadQRCode(link.shortCode, link.description)}\n                    className=\"flex-1 flex items-center justify-center gap-2 px-3 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors text-sm\"\n                  >\n                    <Download size={16} />\n                    QR Code\n                  </button>\n                  <button\n                    onClick={() => handleDeleteLink(link.id)}\n                    className=\"px-3 py-2 bg-red-600/20 hover:bg-red-600/30 text-red-400 rounded-lg transition-colors\"\n                  >\n                    <Trash2 size={16} />\n                  </button>\n                </div>\n\n                {/* Status */}\n                <div className=\"flex items-center justify-between text-xs\">\n                  <span className={`inline-flex items-center gap-1 ${\n                    link.isActive ? 'text-green-400' : 'text-gray-400'\n                  }`}>\n                    <div className={`w-2 h-2 rounded-full ${\n                      link.isActive ? 'bg-green-400' : 'bg-gray-400'\n                    }`} />\n                    {link.isActive ? 'Ativo' : 'Inativo'}\n                  </span>\n                  {link.qrCodeGeneratedAt && (\n                    <span className=\"text-gray-500 flex items-center gap-1\">\n                      <Clock size={12} />\n                      QR atualizado {new Date(link.qrCodeGeneratedAt).toLocaleTimeString('pt-BR')}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            ))\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}